{"version":3,"file":"mapbox-gl-draw-snap-mode.js","mappings":"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","sources":["webpack://mapboxGlDrawSnapMode/webpack/universalModuleDefinition","webpack://mapboxGlDrawSnapMode/./node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/bbox/dist/js/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/helpers/dist/js/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/meta/dist/js/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/geojson-rbush/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/rbush/rbush.min.js","webpack://mapboxGlDrawSnapMode/webpack/bootstrap","webpack://mapboxGlDrawSnapMode/webpack/runtime/compat get default export","webpack://mapboxGlDrawSnapMode/webpack/runtime/define property getters","webpack://mapboxGlDrawSnapMode/webpack/runtime/global","webpack://mapboxGlDrawSnapMode/webpack/runtime/hasOwnProperty shorthand","webpack://mapboxGlDrawSnapMode/webpack/runtime/make namespace object","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/helpers/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/invariant/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/boolean-point-in-polygon/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/meta/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/line-segment/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/line-intersect/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/polygon-to-line/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/boolean-disjoint/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/distance/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/bearing/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/destination/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/nearest-point-on-line/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/clone/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/nearest-point/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/midpoint/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./src/utils/index.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/bbox-polygon/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./src/modes/snap_point.js","webpack://mapboxGlDrawSnapMode/./src/modes/snap_line.js","webpack://mapboxGlDrawSnapMode/./src/modes/snap_polygon.js","webpack://mapboxGlDrawSnapMode/./node_modules/@turf/boolean-intersects/dist/es/index.js","webpack://mapboxGlDrawSnapMode/./src/modes/snap_direct_select.js","webpack://mapboxGlDrawSnapMode/./src/utils/customDrawStyles.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapboxGlDrawSnapMode\"] = factory();\n\telse\n\t\troot[\"mapboxGlDrawSnapMode\"] = factory();\n})(this, function() {\nreturn ","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).MapboxDraw=e()}(this,(function(){\"use strict\";var t=function(t,e){var n={drag:[],click:[],mousemove:[],mousedown:[],mouseup:[],mouseout:[],keydown:[],keyup:[],touchstart:[],touchmove:[],touchend:[],tap:[]},o={on:function(t,e,o){if(void 0===n[t])throw new Error(\"Invalid event type: \"+t);n[t].push({selector:e,fn:o})},render:function(t){e.store.featureChanged(t)}},r=function(t,r){for(var i=n[t],a=i.length;a--;){var s=i[a];if(s.selector(r)){s.fn.call(o,r)||e.store.render(),e.ui.updateMapClasses();break}}};return t.start.call(o),{render:t.render,stop:function(){t.stop&&t.stop()},trash:function(){t.trash&&(t.trash(),e.store.render())},combineFeatures:function(){t.combineFeatures&&t.combineFeatures()},uncombineFeatures:function(){t.uncombineFeatures&&t.uncombineFeatures()},drag:function(t){r(\"drag\",t)},click:function(t){r(\"click\",t)},mousemove:function(t){r(\"mousemove\",t)},mousedown:function(t){r(\"mousedown\",t)},mouseup:function(t){r(\"mouseup\",t)},mouseout:function(t){r(\"mouseout\",t)},keydown:function(t){r(\"keydown\",t)},keyup:function(t){r(\"keyup\",t)},touchstart:function(t){r(\"touchstart\",t)},touchmove:function(t){r(\"touchmove\",t)},touchend:function(t){r(\"touchend\",t)},tap:function(t){r(\"tap\",t)}}};function e(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}function n(t){if(t.__esModule)return t;var e=t.default;if(\"function\"==typeof e){var n=function t(){if(this instanceof t){var n=[null];n.push.apply(n,arguments);var o=Function.bind.apply(e,n);return new o}return e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(t).forEach((function(e){var o=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,o.get?o:{enumerable:!0,get:function(){return t[e]}})})),n}var o={},r={RADIUS:6378137,FLATTENING:1/298.257223563,POLAR_RADIUS:6356752.3142},i=r;function a(t){var e=0;if(t&&t.length>0){e+=Math.abs(s(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(s(t[n]))}return e}function s(t){var e,n,o,r,a,s,c=0,l=t.length;if(l>2){for(s=0;s<l;s++)s===l-2?(o=l-2,r=l-1,a=0):s===l-1?(o=l-1,r=0,a=1):(o=s,r=s+1,a=s+2),e=t[o],n=t[r],c+=(u(t[a][0])-u(e[0]))*Math.sin(u(n[1]));c=c*i.RADIUS*i.RADIUS/2}return c}function u(t){return t*Math.PI/180}o.geometry=function t(e){var n,o=0;switch(e.type){case\"Polygon\":return a(e.coordinates);case\"MultiPolygon\":for(n=0;n<e.coordinates.length;n++)o+=a(e.coordinates[n]);return o;case\"Point\":case\"MultiPoint\":case\"LineString\":case\"MultiLineString\":return 0;case\"GeometryCollection\":for(n=0;n<e.geometries.length;n++)o+=t(e.geometries[n]);return o}},o.ring=s;var c={CONTROL_BASE:\"mapboxgl-ctrl\",CONTROL_PREFIX:\"mapboxgl-ctrl-\",CONTROL_BUTTON:\"mapbox-gl-draw_ctrl-draw-btn\",CONTROL_BUTTON_LINE:\"mapbox-gl-draw_line\",CONTROL_BUTTON_POLYGON:\"mapbox-gl-draw_polygon\",CONTROL_BUTTON_POINT:\"mapbox-gl-draw_point\",CONTROL_BUTTON_TRASH:\"mapbox-gl-draw_trash\",CONTROL_BUTTON_COMBINE_FEATURES:\"mapbox-gl-draw_combine\",CONTROL_BUTTON_UNCOMBINE_FEATURES:\"mapbox-gl-draw_uncombine\",CONTROL_GROUP:\"mapboxgl-ctrl-group\",ATTRIBUTION:\"mapboxgl-ctrl-attrib\",ACTIVE_BUTTON:\"active\",BOX_SELECT:\"mapbox-gl-draw_boxselect\"},l={HOT:\"mapbox-gl-draw-hot\",COLD:\"mapbox-gl-draw-cold\"},d={ADD:\"add\",MOVE:\"move\",DRAG:\"drag\",POINTER:\"pointer\",NONE:\"none\"},p={POLYGON:\"polygon\",LINE:\"line_string\",POINT:\"point\"},f={FEATURE:\"Feature\",POLYGON:\"Polygon\",LINE_STRING:\"LineString\",POINT:\"Point\",FEATURE_COLLECTION:\"FeatureCollection\",MULTI_PREFIX:\"Multi\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\"},h={DRAW_LINE_STRING:\"draw_line_string\",DRAW_POLYGON:\"draw_polygon\",DRAW_POINT:\"draw_point\",SIMPLE_SELECT:\"simple_select\",DIRECT_SELECT:\"direct_select\",STATIC:\"static\"},g={CREATE:\"draw.create\",DELETE:\"draw.delete\",UPDATE:\"draw.update\",SELECTION_CHANGE:\"draw.selectionchange\",MODE_CHANGE:\"draw.modechange\",ACTIONABLE:\"draw.actionable\",RENDER:\"draw.render\",COMBINE_FEATURES:\"draw.combine\",UNCOMBINE_FEATURES:\"draw.uncombine\"},y={MOVE:\"move\",CHANGE_COORDINATES:\"change_coordinates\"},v={FEATURE:\"feature\",MIDPOINT:\"midpoint\",VERTEX:\"vertex\"},m={ACTIVE:\"true\",INACTIVE:\"false\"},_=[\"scrollZoom\",\"boxZoom\",\"dragRotate\",\"dragPan\",\"keyboard\",\"doubleClickZoom\",\"touchZoomRotate\"],b=-85,E=Object.freeze({__proto__:null,classes:c,sources:l,cursors:d,types:p,geojsonTypes:f,modes:h,events:g,updateActions:y,meta:v,activeStates:m,interactions:_,LAT_MIN:-90,LAT_RENDERED_MIN:b,LAT_MAX:90,LAT_RENDERED_MAX:85,LNG_MIN:-270,LNG_MAX:270}),T={Point:0,LineString:1,MultiLineString:1,Polygon:2};function C(t,e){var n=T[t.geometry.type]-T[e.geometry.type];return 0===n&&t.geometry.type===f.POLYGON?t.area-e.area:n}function O(t){return t.map((function(t){return t.geometry.type===f.POLYGON&&(t.area=o.geometry({type:f.FEATURE,property:{},geometry:t.geometry})),t})).sort(C).map((function(t){return delete t.area,t}))}function S(t,e){return void 0===e&&(e=0),[[t.point.x-e,t.point.y-e],[t.point.x+e,t.point.y+e]]}function I(t){if(this._items={},this._nums={},this._length=t?t.length:0,t)for(var e=0,n=t.length;e<n;e++)this.add(t[e]),void 0!==t[e]&&(\"string\"==typeof t[e]?this._items[t[e]]=e:this._nums[t[e]]=e)}I.prototype.add=function(t){return this.has(t)||(this._length++,\"string\"==typeof t?this._items[t]=this._length:this._nums[t]=this._length),this},I.prototype.delete=function(t){return!1===this.has(t)||(this._length--,delete this._items[t],delete this._nums[t]),this},I.prototype.has=function(t){return(\"string\"==typeof t||\"number\"==typeof t)&&(void 0!==this._items[t]||void 0!==this._nums[t])},I.prototype.values=function(){var t=this,e=[];return Object.keys(this._items).forEach((function(n){e.push({k:n,v:t._items[n]})})),Object.keys(this._nums).forEach((function(n){e.push({k:JSON.parse(n),v:t._nums[n]})})),e.sort((function(t,e){return t.v-e.v})).map((function(t){return t.k}))},I.prototype.clear=function(){return this._length=0,this._items={},this._nums={},this};var x=[v.FEATURE,v.MIDPOINT,v.VERTEX],M={click:function(t,e,n){return L(t,e,n,n.options.clickBuffer)},touch:function(t,e,n){return L(t,e,n,n.options.touchBuffer)}};function L(t,e,n,o){if(null===n.map)return[];var r=t?S(t,o):e,i={};n.options.styles&&(i.layers=n.options.styles.map((function(t){return t.id})));var a=n.map.queryRenderedFeatures(r,i).filter((function(t){return-1!==x.indexOf(t.properties.meta)})),s=new I,u=[];return a.forEach((function(t){var e=t.properties.id;s.has(e)||(s.add(e),u.push(t))})),O(u)}function N(t,e){var n=M.click(t,null,e),o={mouse:d.NONE};return n[0]&&(o.mouse=n[0].properties.active===m.ACTIVE?d.MOVE:d.POINTER,o.feature=n[0].properties.meta),-1!==e.events.currentModeName().indexOf(\"draw\")&&(o.mouse=d.ADD),e.ui.queueMapClasses(o),e.ui.updateMapClasses(),n[0]}function A(t,e){var n=t.x-e.x,o=t.y-e.y;return Math.sqrt(n*n+o*o)}function P(t,e,n){void 0===n&&(n={});var o=null!=n.fineTolerance?n.fineTolerance:4,r=null!=n.grossTolerance?n.grossTolerance:12,i=null!=n.interval?n.interval:500;t.point=t.point||e.point,t.time=t.time||e.time;var a=A(t.point,e.point);return a<o||a<r&&e.time-t.time<i}function F(t,e,n){void 0===n&&(n={});var o=null!=n.tolerance?n.tolerance:25,r=null!=n.interval?n.interval:250;return t.point=t.point||e.point,t.time=t.time||e.time,A(t.point,e.point)<o&&e.time-t.time<r}var w={exports:{}},R=w.exports=function(t,e){if(e||(e=16),void 0===t&&(t=128),t<=0)return\"0\";for(var n=Math.log(Math.pow(2,t))/Math.log(e),o=2;n===1/0;o*=2)n=Math.log(Math.pow(2,t/o))/Math.log(e)*o;var r=n-Math.floor(n),i=\"\";for(o=0;o<Math.floor(n);o++){i=Math.floor(Math.random()*e).toString(e)+i}if(r){var a=Math.pow(e,r);i=Math.floor(Math.random()*a).toString(e)+i}var s=parseInt(i,e);return s!==1/0&&s>=Math.pow(2,t)?R(t,e):i};R.rack=function(t,e,n){var o=function(o){var i=0;do{if(i++>10){if(!n)throw new Error(\"too many ID collisions, use more bits\");t+=n}var a=R(t,e)}while(Object.hasOwnProperty.call(r,a));return r[a]=o,a},r=o.hats={};return o.get=function(t){return o.hats[t]},o.set=function(t,e){return o.hats[t]=e,o},o.bits=t||128,o.base=e||16,o};var D=e(w.exports),k=function(t,e){this.ctx=t,this.properties=e.properties||{},this.coordinates=e.geometry.coordinates,this.id=e.id||D(),this.type=e.geometry.type};k.prototype.changed=function(){this.ctx.store.featureChanged(this.id)},k.prototype.incomingCoords=function(t){this.setCoordinates(t)},k.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},k.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.coordinates))},k.prototype.setProperty=function(t,e){this.properties[t]=e},k.prototype.toGeoJSON=function(){return JSON.parse(JSON.stringify({id:this.id,type:f.FEATURE,properties:this.properties,geometry:{coordinates:this.getCoordinates(),type:this.type}}))},k.prototype.internal=function(t){var e={id:this.id,meta:v.FEATURE,\"meta:type\":this.type,active:m.INACTIVE,mode:t};if(this.ctx.options.userProperties)for(var n in this.properties)e[\"user_\"+n]=this.properties[n];return{type:f.FEATURE,properties:e,geometry:{coordinates:this.getCoordinates(),type:this.type}}};var U=function(t,e){k.call(this,t,e)};(U.prototype=Object.create(k.prototype)).isValid=function(){return\"number\"==typeof this.coordinates[0]&&\"number\"==typeof this.coordinates[1]},U.prototype.updateCoordinate=function(t,e,n){this.coordinates=3===arguments.length?[e,n]:[t,e],this.changed()},U.prototype.getCoordinate=function(){return this.getCoordinates()};var j=function(t,e){k.call(this,t,e)};(j.prototype=Object.create(k.prototype)).isValid=function(){return this.coordinates.length>1},j.prototype.addCoordinate=function(t,e,n){this.changed();var o=parseInt(t,10);this.coordinates.splice(o,0,[e,n])},j.prototype.getCoordinate=function(t){var e=parseInt(t,10);return JSON.parse(JSON.stringify(this.coordinates[e]))},j.prototype.removeCoordinate=function(t){this.changed(),this.coordinates.splice(parseInt(t,10),1)},j.prototype.updateCoordinate=function(t,e,n){var o=parseInt(t,10);this.coordinates[o]=[e,n],this.changed()};var V=function(t,e){k.call(this,t,e),this.coordinates=this.coordinates.map((function(t){return t.slice(0,-1)}))};(V.prototype=Object.create(k.prototype)).isValid=function(){return 0!==this.coordinates.length&&this.coordinates.every((function(t){return t.length>2}))},V.prototype.incomingCoords=function(t){this.coordinates=t.map((function(t){return t.slice(0,-1)})),this.changed()},V.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},V.prototype.addCoordinate=function(t,e,n){this.changed();var o=t.split(\".\").map((function(t){return parseInt(t,10)}));this.coordinates[o[0]].splice(o[1],0,[e,n])},V.prototype.removeCoordinate=function(t){this.changed();var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];n&&(n.splice(e[1],1),n.length<3&&this.coordinates.splice(e[0],1))},V.prototype.getCoordinate=function(t){var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];return JSON.parse(JSON.stringify(n[e[1]]))},V.prototype.getCoordinates=function(){return this.coordinates.map((function(t){return t.concat([t[0]])}))},V.prototype.updateCoordinate=function(t,e,n){this.changed();var o=t.split(\".\"),r=parseInt(o[0],10),i=parseInt(o[1],10);void 0===this.coordinates[r]&&(this.coordinates[r]=[]),this.coordinates[r][i]=[e,n]};var B={MultiPoint:U,MultiLineString:j,MultiPolygon:V},G=function(t,e,n,o,r){var i=n.split(\".\"),a=parseInt(i[0],10),s=i[1]?i.slice(1).join(\".\"):null;return t[a][e](s,o,r)},J=function(t,e){if(k.call(this,t,e),delete this.coordinates,this.model=B[e.geometry.type],void 0===this.model)throw new TypeError(e.geometry.type+\" is not a valid type\");this.features=this._coordinatesToFeatures(e.geometry.coordinates)};function z(t){this.map=t.map,this.drawConfig=JSON.parse(JSON.stringify(t.options||{})),this._ctx=t}(J.prototype=Object.create(k.prototype))._coordinatesToFeatures=function(t){var e=this,n=this.model.bind(this);return t.map((function(t){return new n(e.ctx,{id:D(),type:f.FEATURE,properties:{},geometry:{coordinates:t,type:e.type.replace(\"Multi\",\"\")}})}))},J.prototype.isValid=function(){return this.features.every((function(t){return t.isValid()}))},J.prototype.setCoordinates=function(t){this.features=this._coordinatesToFeatures(t),this.changed()},J.prototype.getCoordinate=function(t){return G(this.features,\"getCoordinate\",t)},J.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.features.map((function(t){return t.type===f.POLYGON?t.getCoordinates():t.coordinates}))))},J.prototype.updateCoordinate=function(t,e,n){G(this.features,\"updateCoordinate\",t,e,n),this.changed()},J.prototype.addCoordinate=function(t,e,n){G(this.features,\"addCoordinate\",t,e,n),this.changed()},J.prototype.removeCoordinate=function(t){G(this.features,\"removeCoordinate\",t),this.changed()},J.prototype.getFeatures=function(){return this.features},z.prototype.setSelected=function(t){return this._ctx.store.setSelected(t)},z.prototype.setSelectedCoordinates=function(t){var e=this;this._ctx.store.setSelectedCoordinates(t),t.reduce((function(t,n){return void 0===t[n.feature_id]&&(t[n.feature_id]=!0,e._ctx.store.get(n.feature_id).changed()),t}),{})},z.prototype.getSelected=function(){return this._ctx.store.getSelected()},z.prototype.getSelectedIds=function(){return this._ctx.store.getSelectedIds()},z.prototype.isSelected=function(t){return this._ctx.store.isSelected(t)},z.prototype.getFeature=function(t){return this._ctx.store.get(t)},z.prototype.select=function(t){return this._ctx.store.select(t)},z.prototype.deselect=function(t){return this._ctx.store.deselect(t)},z.prototype.deleteFeature=function(t,e){return void 0===e&&(e={}),this._ctx.store.delete(t,e)},z.prototype.addFeature=function(t){return this._ctx.store.add(t)},z.prototype.clearSelectedFeatures=function(){return this._ctx.store.clearSelected()},z.prototype.clearSelectedCoordinates=function(){return this._ctx.store.clearSelectedCoordinates()},z.prototype.setActionableState=function(t){void 0===t&&(t={});var e={trash:t.trash||!1,combineFeatures:t.combineFeatures||!1,uncombineFeatures:t.uncombineFeatures||!1};return this._ctx.events.actionable(e)},z.prototype.changeMode=function(t,e,n){return void 0===e&&(e={}),void 0===n&&(n={}),this._ctx.events.changeMode(t,e,n)},z.prototype.updateUIClasses=function(t){return this._ctx.ui.queueMapClasses(t)},z.prototype.activateUIButton=function(t){return this._ctx.ui.setActiveButton(t)},z.prototype.featuresAt=function(t,e,n){if(void 0===n&&(n=\"click\"),\"click\"!==n&&\"touch\"!==n)throw new Error(\"invalid buffer type\");return M[n](t,e,this._ctx)},z.prototype.newFeature=function(t){var e=t.geometry.type;return e===f.POINT?new U(this._ctx,t):e===f.LINE_STRING?new j(this._ctx,t):e===f.POLYGON?new V(this._ctx,t):new J(this._ctx,t)},z.prototype.isInstanceOf=function(t,e){if(t===f.POINT)return e instanceof U;if(t===f.LINE_STRING)return e instanceof j;if(t===f.POLYGON)return e instanceof V;if(\"MultiFeature\"===t)return e instanceof J;throw new Error(\"Unknown feature class: \"+t)},z.prototype.doRender=function(t){return this._ctx.store.featureChanged(t)},z.prototype.onSetup=function(){},z.prototype.onDrag=function(){},z.prototype.onClick=function(){},z.prototype.onMouseMove=function(){},z.prototype.onMouseDown=function(){},z.prototype.onMouseUp=function(){},z.prototype.onMouseOut=function(){},z.prototype.onKeyUp=function(){},z.prototype.onKeyDown=function(){},z.prototype.onTouchStart=function(){},z.prototype.onTouchMove=function(){},z.prototype.onTouchEnd=function(){},z.prototype.onTap=function(){},z.prototype.onStop=function(){},z.prototype.onTrash=function(){},z.prototype.onCombineFeature=function(){},z.prototype.onUncombineFeature=function(){},z.prototype.toDisplayFeatures=function(){throw new Error(\"You must overwrite toDisplayFeatures\")};var Y={drag:\"onDrag\",click:\"onClick\",mousemove:\"onMouseMove\",mousedown:\"onMouseDown\",mouseup:\"onMouseUp\",mouseout:\"onMouseOut\",keyup:\"onKeyUp\",keydown:\"onKeyDown\",touchstart:\"onTouchStart\",touchmove:\"onTouchMove\",touchend:\"onTouchEnd\",tap:\"onTap\"},$=Object.keys(Y);function q(t){var e=Object.keys(t);return function(n,o){void 0===o&&(o={});var r={},i=e.reduce((function(e,n){return e[n]=t[n],e}),new z(n));return{start:function(){var e=this;r=i.onSetup(o),$.forEach((function(n){var o,a=Y[n],s=function(){return!1};t[a]&&(s=function(){return!0}),e.on(n,s,(o=a,function(t){return i[o](r,t)}))}))},stop:function(){i.onStop(r)},trash:function(){i.onTrash(r)},combineFeatures:function(){i.onCombineFeatures(r)},uncombineFeatures:function(){i.onUncombineFeatures(r)},render:function(t,e){i.toDisplayFeatures(r,t,e)}}}}function H(t){return[].concat(t).filter((function(t){return void 0!==t}))}function X(){var t=this;if(!(t.ctx.map&&void 0!==t.ctx.map.getSource(l.HOT)))return u();var e=t.ctx.events.currentModeName();t.ctx.ui.queueMapClasses({mode:e});var n=[],o=[];t.isDirty?o=t.getAllIds():(n=t.getChangedIds().filter((function(e){return void 0!==t.get(e)})),o=t.sources.hot.filter((function(e){return e.properties.id&&-1===n.indexOf(e.properties.id)&&void 0!==t.get(e.properties.id)})).map((function(t){return t.properties.id}))),t.sources.hot=[];var r=t.sources.cold.length;t.sources.cold=t.isDirty?[]:t.sources.cold.filter((function(t){var e=t.properties.id||t.properties.parent;return-1===n.indexOf(e)}));var i=r!==t.sources.cold.length||o.length>0;function a(n,o){var r=t.get(n).internal(e);t.ctx.events.currentModeRender(r,(function(e){t.sources[o].push(e)}))}if(n.forEach((function(t){return a(t,\"hot\")})),o.forEach((function(t){return a(t,\"cold\")})),i&&t.ctx.map.getSource(l.COLD).setData({type:f.FEATURE_COLLECTION,features:t.sources.cold}),t.ctx.map.getSource(l.HOT).setData({type:f.FEATURE_COLLECTION,features:t.sources.hot}),t._emitSelectionChange&&(t.ctx.map.fire(g.SELECTION_CHANGE,{features:t.getSelected().map((function(t){return t.toGeoJSON()})),points:t.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}),t._emitSelectionChange=!1),t._deletedFeaturesToEmit.length){var s=t._deletedFeaturesToEmit.map((function(t){return t.toGeoJSON()}));t._deletedFeaturesToEmit=[],t.ctx.map.fire(g.DELETE,{features:s})}function u(){t.isDirty=!1,t.clearChangedIds()}u(),t.ctx.map.fire(g.RENDER,{})}function Z(t){var e,n=this;this._features={},this._featureIds=new I,this._selectedFeatureIds=new I,this._selectedCoordinates=[],this._changedFeatureIds=new I,this._deletedFeaturesToEmit=[],this._emitSelectionChange=!1,this._mapInitialConfig={},this.ctx=t,this.sources={hot:[],cold:[]},this.render=function(){e||(e=requestAnimationFrame((function(){e=null,X.call(n)})))},this.isDirty=!1}function W(t,e){var n=t._selectedCoordinates.filter((function(e){return t._selectedFeatureIds.has(e.feature_id)}));t._selectedCoordinates.length===n.length||e.silent||(t._emitSelectionChange=!0),t._selectedCoordinates=n}Z.prototype.createRenderBatch=function(){var t=this,e=this.render,n=0;return this.render=function(){n++},function(){t.render=e,n>0&&t.render()}},Z.prototype.setDirty=function(){return this.isDirty=!0,this},Z.prototype.featureChanged=function(t){return this._changedFeatureIds.add(t),this},Z.prototype.getChangedIds=function(){return this._changedFeatureIds.values()},Z.prototype.clearChangedIds=function(){return this._changedFeatureIds.clear(),this},Z.prototype.getAllIds=function(){return this._featureIds.values()},Z.prototype.add=function(t){return this.featureChanged(t.id),this._features[t.id]=t,this._featureIds.add(t.id),this},Z.prototype.delete=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._featureIds.has(t)&&(n._featureIds.delete(t),n._selectedFeatureIds.delete(t),e.silent||-1===n._deletedFeaturesToEmit.indexOf(n._features[t])&&n._deletedFeaturesToEmit.push(n._features[t]),delete n._features[t],n.isDirty=!0)})),W(this,e),this},Z.prototype.get=function(t){return this._features[t]},Z.prototype.getAll=function(){var t=this;return Object.keys(this._features).map((function(e){return t._features[e]}))},Z.prototype.select=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)||(n._selectedFeatureIds.add(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),this},Z.prototype.deselect=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)&&(n._selectedFeatureIds.delete(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),W(this,e),this},Z.prototype.clearSelected=function(t){return void 0===t&&(t={}),this.deselect(this._selectedFeatureIds.values(),{silent:t.silent}),this},Z.prototype.setSelected=function(t,e){var n=this;return void 0===e&&(e={}),t=H(t),this.deselect(this._selectedFeatureIds.values().filter((function(e){return-1===t.indexOf(e)})),{silent:e.silent}),this.select(t.filter((function(t){return!n._selectedFeatureIds.has(t)})),{silent:e.silent}),this},Z.prototype.setSelectedCoordinates=function(t){return this._selectedCoordinates=t,this._emitSelectionChange=!0,this},Z.prototype.clearSelectedCoordinates=function(){return this._selectedCoordinates=[],this._emitSelectionChange=!0,this},Z.prototype.getSelectedIds=function(){return this._selectedFeatureIds.values()},Z.prototype.getSelected=function(){var t=this;return this._selectedFeatureIds.values().map((function(e){return t.get(e)}))},Z.prototype.getSelectedCoordinates=function(){var t=this;return this._selectedCoordinates.map((function(e){return{coordinates:t.get(e.feature_id).getCoordinate(e.coord_path)}}))},Z.prototype.isSelected=function(t){return this._selectedFeatureIds.has(t)},Z.prototype.setFeatureProperty=function(t,e,n){this.get(t).setProperty(e,n),this.featureChanged(t)},Z.prototype.storeMapConfig=function(){var t=this;_.forEach((function(e){t.ctx.map[e]&&(t._mapInitialConfig[e]=t.ctx.map[e].isEnabled())}))},Z.prototype.restoreMapConfig=function(){var t=this;Object.keys(this._mapInitialConfig).forEach((function(e){t._mapInitialConfig[e]?t.ctx.map[e].enable():t.ctx.map[e].disable()}))},Z.prototype.getInitialConfigValue=function(t){return void 0===this._mapInitialConfig[t]||this._mapInitialConfig[t]};var K=function(){for(var t=arguments,e={},n=0;n<arguments.length;n++){var o=t[n];for(var r in o)Q.call(o,r)&&(e[r]=o[r])}return e},Q=Object.prototype.hasOwnProperty;var tt=e(K),et=[\"mode\",\"feature\",\"mouse\"];function nt(e){var n=null,o=null,r={onRemove:function(){return e.map.off(\"load\",r.connect),clearInterval(o),r.removeLayers(),e.store.restoreMapConfig(),e.ui.removeButtons(),e.events.removeEventListeners(),e.ui.clearMapClasses(),e.boxZoomInitial&&e.map.boxZoom.enable(),e.map=null,e.container=null,e.store=null,n&&n.parentNode&&n.parentNode.removeChild(n),n=null,this},connect:function(){e.map.off(\"load\",r.connect),clearInterval(o),r.addLayers(),e.store.storeMapConfig(),e.events.addEventListeners()},onAdd:function(i){var a=i.fire;return i.fire=function(t,e){var n=arguments;return 1===a.length&&1!==arguments.length&&(n=[tt({},{type:t},e)]),a.apply(i,n)},e.map=i,e.events=function(e){var n=Object.keys(e.options.modes).reduce((function(t,n){return t[n]=q(e.options.modes[n]),t}),{}),o={},r={},i={},a=null,s=null;i.drag=function(t,n){n({point:t.point,time:(new Date).getTime()})?(e.ui.queueMapClasses({mouse:d.DRAG}),s.drag(t)):t.originalEvent.stopPropagation()},i.mousedrag=function(t){i.drag(t,(function(t){return!P(o,t)}))},i.touchdrag=function(t){i.drag(t,(function(t){return!F(r,t)}))},i.mousemove=function(t){if(1===(void 0!==t.originalEvent.buttons?t.originalEvent.buttons:t.originalEvent.which))return i.mousedrag(t);var n=N(t,e);t.featureTarget=n,s.mousemove(t)},i.mousedown=function(t){o={time:(new Date).getTime(),point:t.point};var n=N(t,e);t.featureTarget=n,s.mousedown(t)},i.mouseup=function(t){var n=N(t,e);t.featureTarget=n,P(o,{point:t.point,time:(new Date).getTime()})?s.click(t):s.mouseup(t)},i.mouseout=function(t){s.mouseout(t)},i.touchstart=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled){r={time:(new Date).getTime(),point:t.point};var n=M.touch(t,null,e)[0];t.featureTarget=n,s.touchstart(t)}},i.touchmove=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled)return s.touchmove(t),i.touchdrag(t)},i.touchend=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled){var n=M.touch(t,null,e)[0];t.featureTarget=n,F(r,{time:(new Date).getTime(),point:t.point})?s.tap(t):s.touchend(t)}};var u=function(t){return!(8===t||46===t||t>=48&&t<=57)};function c(o,r,i){void 0===i&&(i={}),s.stop();var u=n[o];if(void 0===u)throw new Error(o+\" is not valid\");a=o;var c=u(e,r);s=t(c,e),i.silent||e.map.fire(g.MODE_CHANGE,{mode:o}),e.store.setDirty(),e.store.render()}i.keydown=function(t){(t.srcElement||t.target).classList.contains(\"mapboxgl-canvas\")&&(8!==t.keyCode&&46!==t.keyCode||!e.options.controls.trash?u(t.keyCode)?s.keydown(t):49===t.keyCode&&e.options.controls.point?c(h.DRAW_POINT):50===t.keyCode&&e.options.controls.line_string?c(h.DRAW_LINE_STRING):51===t.keyCode&&e.options.controls.polygon&&c(h.DRAW_POLYGON):(t.preventDefault(),s.trash()))},i.keyup=function(t){u(t.keyCode)&&s.keyup(t)},i.zoomend=function(){e.store.changeZoom()},i.data=function(t){if(\"style\"===t.dataType){var n=e.setup,o=e.map,r=e.options,i=e.store;r.styles.some((function(t){return o.getLayer(t.id)}))||(n.addLayers(),i.setDirty(),i.render())}};var l={trash:!1,combineFeatures:!1,uncombineFeatures:!1};return{start:function(){a=e.options.defaultMode,s=t(n[a](e),e)},changeMode:c,actionable:function(t){var n=!1;Object.keys(t).forEach((function(e){if(void 0===l[e])throw new Error(\"Invalid action type\");l[e]!==t[e]&&(n=!0),l[e]=t[e]})),n&&e.map.fire(g.ACTIONABLE,{actions:l})},currentModeName:function(){return a},currentModeRender:function(t,e){return s.render(t,e)},fire:function(t,e){i[t]&&i[t](e)},addEventListeners:function(){e.map.on(\"mousemove\",i.mousemove),e.map.on(\"mousedown\",i.mousedown),e.map.on(\"mouseup\",i.mouseup),e.map.on(\"data\",i.data),e.map.on(\"touchmove\",i.touchmove),e.map.on(\"touchstart\",i.touchstart),e.map.on(\"touchend\",i.touchend),e.container.addEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.addEventListener(\"keydown\",i.keydown),e.container.addEventListener(\"keyup\",i.keyup))},removeEventListeners:function(){e.map.off(\"mousemove\",i.mousemove),e.map.off(\"mousedown\",i.mousedown),e.map.off(\"mouseup\",i.mouseup),e.map.off(\"data\",i.data),e.map.off(\"touchmove\",i.touchmove),e.map.off(\"touchstart\",i.touchstart),e.map.off(\"touchend\",i.touchend),e.container.removeEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.removeEventListener(\"keydown\",i.keydown),e.container.removeEventListener(\"keyup\",i.keyup))},trash:function(t){s.trash(t)},combineFeatures:function(){s.combineFeatures()},uncombineFeatures:function(){s.uncombineFeatures()},getMode:function(){return a}}}(e),e.ui=function(t){var e={},n=null,o={mode:null,feature:null,mouse:null},r={mode:null,feature:null,mouse:null};function i(t){r=tt(r,t)}function a(){var e,n;if(t.container){var i=[],a=[];et.forEach((function(t){r[t]!==o[t]&&(i.push(t+\"-\"+o[t]),null!==r[t]&&a.push(t+\"-\"+r[t]))})),i.length>0&&(e=t.container.classList).remove.apply(e,i),a.length>0&&(n=t.container.classList).add.apply(n,a),o=tt(o,r)}}function s(t,e){void 0===e&&(e={});var o=document.createElement(\"button\");return o.className=c.CONTROL_BUTTON+\" \"+e.className,o.setAttribute(\"title\",e.title),e.container.appendChild(o),o.addEventListener(\"click\",(function(o){if(o.preventDefault(),o.stopPropagation(),o.target===n)return u(),void e.onDeactivate();l(t),e.onActivate()}),!0),o}function u(){n&&(n.classList.remove(c.ACTIVE_BUTTON),n=null)}function l(t){u();var o=e[t];o&&o&&\"trash\"!==t&&(o.classList.add(c.ACTIVE_BUTTON),n=o)}return{setActiveButton:l,queueMapClasses:i,updateMapClasses:a,clearMapClasses:function(){i({mode:null,feature:null,mouse:null}),a()},addButtons:function(){var n=t.options.controls,o=document.createElement(\"div\");return o.className=c.CONTROL_GROUP+\" \"+c.CONTROL_BASE,n?(n[p.LINE]&&(e[p.LINE]=s(p.LINE,{container:o,className:c.CONTROL_BUTTON_LINE,title:\"LineString tool \"+(t.options.keybindings?\"(l)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_LINE_STRING)},onDeactivate:function(){return t.events.trash()}})),n[p.POLYGON]&&(e[p.POLYGON]=s(p.POLYGON,{container:o,className:c.CONTROL_BUTTON_POLYGON,title:\"Polygon tool \"+(t.options.keybindings?\"(p)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POLYGON)},onDeactivate:function(){return t.events.trash()}})),n[p.POINT]&&(e[p.POINT]=s(p.POINT,{container:o,className:c.CONTROL_BUTTON_POINT,title:\"Marker tool \"+(t.options.keybindings?\"(m)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POINT)},onDeactivate:function(){return t.events.trash()}})),n.trash&&(e.trash=s(\"trash\",{container:o,className:c.CONTROL_BUTTON_TRASH,title:\"Delete\",onActivate:function(){t.events.trash()}})),n.combine_features&&(e.combine_features=s(\"combineFeatures\",{container:o,className:c.CONTROL_BUTTON_COMBINE_FEATURES,title:\"Combine\",onActivate:function(){t.events.combineFeatures()}})),n.uncombine_features&&(e.uncombine_features=s(\"uncombineFeatures\",{container:o,className:c.CONTROL_BUTTON_UNCOMBINE_FEATURES,title:\"Uncombine\",onActivate:function(){t.events.uncombineFeatures()}})),o):o},removeButtons:function(){Object.keys(e).forEach((function(t){var n=e[t];n.parentNode&&n.parentNode.removeChild(n),delete e[t]}))}}}(e),e.container=i.getContainer(),e.store=new Z(e),n=e.ui.addButtons(),e.options.boxSelect&&(e.boxZoomInitial=i.boxZoom.isEnabled(),i.boxZoom.disable(),i.dragPan.disable(),i.dragPan.enable()),i.loaded()?r.connect():(i.on(\"load\",r.connect),o=setInterval((function(){i.loaded()&&r.connect()}),16)),e.events.start(),n},addLayers:function(){e.map.addSource(l.COLD,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.map.addSource(l.HOT,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.options.styles.forEach((function(t){e.map.addLayer(t)})),e.store.setDirty(!0),e.store.render()},removeLayers:function(){e.options.styles.forEach((function(t){e.map.getLayer(t.id)&&e.map.removeLayer(t.id)})),e.map.getSource(l.COLD)&&e.map.removeSource(l.COLD),e.map.getSource(l.HOT)&&e.map.removeSource(l.HOT)}};return e.setup=r,r}var ot=[{id:\"gl-draw-polygon-fill-inactive\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],paint:{\"fill-color\":\"#3bb2d0\",\"fill-outline-color\":\"#3bb2d0\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-fill-active\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#fbb03b\",\"fill-outline-color\":\"#fbb03b\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-midpoint\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-stroke-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-polygon-stroke-active\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-line-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"LineString\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-line-active\",type:\"line\",filter:[\"all\",[\"==\",\"$type\",\"LineString\"],[\"==\",\"active\",\"true\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-polygon-and-line-vertex-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fff\"}},{id:\"gl-draw-polygon-and-line-vertex-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-point-point-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-opacity\":1,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#3bb2d0\"}},{id:\"gl-draw-point-stroke-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"active\",\"true\"],[\"!=\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":7,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"!=\",\"meta\",\"midpoint\"],[\"==\",\"active\",\"true\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-fill-static\",type:\"fill\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#404040\",\"fill-outline-color\":\"#404040\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-stroke-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-line-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"LineString\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-point-static\",type:\"circle\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Point\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#404040\"}}];function rt(t){return function(e){var n=e.featureTarget;return!!n&&(!!n.properties&&n.properties.meta===t)}}function it(t){return!!t.originalEvent&&(!!t.originalEvent.shiftKey&&0===t.originalEvent.button)}function at(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.ACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function st(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.INACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function ut(t){return void 0===t.featureTarget}function ct(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&t.featureTarget.properties.meta===v.FEATURE)}function lt(t){var e=t.featureTarget;return!!e&&(!!e.properties&&e.properties.meta===v.VERTEX)}function dt(t){return!!t.originalEvent&&!0===t.originalEvent.shiftKey}function pt(t){return 27===t.keyCode}function ft(t){return 13===t.keyCode}var ht=Object.freeze({__proto__:null,isOfMetaType:rt,isShiftMousedown:it,isActiveFeature:at,isInactiveFeature:st,noTarget:ut,isFeature:ct,isVertex:lt,isShiftDown:dt,isEscapeKey:pt,isEnterKey:ft,isTrue:function(){return!0}}),gt=yt;function yt(t,e){this.x=t,this.y=e}yt.prototype={clone:function(){return new yt(this.x,this.y)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,e){return this.clone()._rotateAround(t,e)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){var e=t.x-this.x,n=t.y-this.y;return e*e+n*n},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)},_matMult:function(t){var e=t[0]*this.x+t[1]*this.y,n=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=n,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){var t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){var e=Math.cos(t),n=Math.sin(t),o=e*this.x-n*this.y,r=n*this.x+e*this.y;return this.x=o,this.y=r,this},_rotateAround:function(t,e){var n=Math.cos(t),o=Math.sin(t),r=e.x+n*(this.x-e.x)-o*(this.y-e.y),i=e.y+o*(this.x-e.x)+n*(this.y-e.y);return this.x=r,this.y=i,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},yt.convert=function(t){return t instanceof yt?t:Array.isArray(t)?new yt(t[0],t[1]):t};var vt=e(gt);function mt(t,e){var n=e.getBoundingClientRect();return new vt(t.clientX-n.left-(e.clientLeft||0),t.clientY-n.top-(e.clientTop||0))}function _t(t,e,n,o){return{type:f.FEATURE,properties:{meta:v.VERTEX,parent:t,coord_path:n,active:o?m.ACTIVE:m.INACTIVE},geometry:{type:f.POINT,coordinates:e}}}function bt(t,e,n){var o=e.geometry.coordinates,r=n.geometry.coordinates;if(o[1]>85||o[1]<b||r[1]>85||r[1]<b)return null;var i={lng:(o[0]+r[0])/2,lat:(o[1]+r[1])/2};return{type:f.FEATURE,properties:{meta:v.MIDPOINT,parent:t,lng:i.lng,lat:i.lat,coord_path:n.properties.coord_path},geometry:{type:f.POINT,coordinates:[i.lng,i.lat]}}}function Et(t,e,n){void 0===e&&(e={}),void 0===n&&(n=null);var o,r=t.geometry,i=r.type,a=r.coordinates,s=t.properties&&t.properties.id,u=[];function c(t,n){var o=\"\",r=null;t.forEach((function(t,i){var a=null!=n?n+\".\"+i:String(i),c=_t(s,t,a,l(a));if(e.midpoints&&r){var d=bt(s,r,c);d&&u.push(d)}r=c;var p=JSON.stringify(t);o!==p&&u.push(c),0===i&&(o=p)}))}function l(t){return!!e.selectedPaths&&-1!==e.selectedPaths.indexOf(t)}return i===f.POINT?u.push(_t(s,a,n,l(n))):i===f.POLYGON?a.forEach((function(t,e){c(t,null!==n?n+\".\"+e:String(e))})):i===f.LINE_STRING?c(a,n):0===i.indexOf(f.MULTI_PREFIX)&&(o=i.replace(f.MULTI_PREFIX,\"\"),a.forEach((function(n,r){var i={type:f.FEATURE,properties:t.properties,geometry:{type:o,coordinates:n}};u=u.concat(Et(i,e,r))}))),u}var Tt={enable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue(\"doubleClickZoom\")&&t.map.doubleClickZoom.enable()}),0)},disable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}},Ct={exports:{}},Ot=function(t){if(!t||!t.type)return null;var e=St[t.type];if(!e)return null;if(\"geometry\"===e)return{type:\"FeatureCollection\",features:[{type:\"Feature\",properties:{},geometry:t}]};if(\"feature\"===e)return{type:\"FeatureCollection\",features:[t]};if(\"featurecollection\"===e)return t},St={Point:\"geometry\",MultiPoint:\"geometry\",LineString:\"geometry\",MultiLineString:\"geometry\",Polygon:\"geometry\",MultiPolygon:\"geometry\",GeometryCollection:\"geometry\",Feature:\"feature\",FeatureCollection:\"featurecollection\"};var It=e(Ot);var xt=Object.freeze({__proto__:null,default:function t(e){switch(e&&e.type||null){case\"FeatureCollection\":return e.features=e.features.reduce((function(e,n){return e.concat(t(n))}),[]),e;case\"Feature\":return e.geometry?t(e.geometry).map((function(t){var n={type:\"Feature\",properties:JSON.parse(JSON.stringify(e.properties)),geometry:t};return void 0!==e.id&&(n.id=e.id),n})):[e];case\"MultiPoint\":return e.coordinates.map((function(t){return{type:\"Point\",coordinates:t}}));case\"MultiPolygon\":return e.coordinates.map((function(t){return{type:\"Polygon\",coordinates:t}}));case\"MultiLineString\":return e.coordinates.map((function(t){return{type:\"LineString\",coordinates:t}}));case\"GeometryCollection\":return e.geometries.map(t).reduce((function(t,e){return t.concat(e)}),[]);case\"Point\":case\"Polygon\":case\"LineString\":return[e]}}}),Mt=Ot,Lt=n(xt),Nt=function(t){return function t(e){if(Array.isArray(e)&&e.length&&\"number\"==typeof e[0])return[e];return e.reduce((function(e,n){return Array.isArray(n)&&Array.isArray(n[0])?e.concat(t(n)):(e.push(n),e)}),[])}(t)};Lt instanceof Function||(Lt=Lt.default);var At={exports:{}},Pt=At.exports=function(t){return new Ft(t)};function Ft(t){this.value=t}function wt(t,e,n){var o=[],r=[],i=!0;return function t(a){var s=n?Rt(a):a,u={},c=!0,l={node:s,node_:a,path:[].concat(o),parent:r[r.length-1],parents:r,key:o.slice(-1)[0],isRoot:0===o.length,level:o.length,circular:null,update:function(t,e){l.isRoot||(l.parent.node[l.key]=t),l.node=t,e&&(c=!1)},delete:function(t){delete l.parent.node[l.key],t&&(c=!1)},remove:function(t){Ut(l.parent.node)?l.parent.node.splice(l.key,1):delete l.parent.node[l.key],t&&(c=!1)},keys:null,before:function(t){u.before=t},after:function(t){u.after=t},pre:function(t){u.pre=t},post:function(t){u.post=t},stop:function(){i=!1},block:function(){c=!1}};if(!i)return l;function d(){if(\"object\"==typeof l.node&&null!==l.node){l.keys&&l.node_===l.node||(l.keys=Dt(l.node)),l.isLeaf=0==l.keys.length;for(var t=0;t<r.length;t++)if(r[t].node_===a){l.circular=r[t];break}}else l.isLeaf=!0,l.keys=null;l.notLeaf=!l.isLeaf,l.notRoot=!l.isRoot}d();var p=e.call(l,l.node);return void 0!==p&&l.update&&l.update(p),u.before&&u.before.call(l,l.node),c?(\"object\"!=typeof l.node||null===l.node||l.circular||(r.push(l),d(),jt(l.keys,(function(e,r){o.push(e),u.pre&&u.pre.call(l,l.node[e],e);var i=t(l.node[e]);n&&Vt.call(l.node,e)&&(l.node[e]=i.node),i.isLast=r==l.keys.length-1,i.isFirst=0==r,u.post&&u.post.call(l,i),o.pop()})),r.pop()),u.after&&u.after.call(l,l.node),l):l}(t).node}function Rt(t){if(\"object\"==typeof t&&null!==t){var e;if(Ut(t))e=[];else if(\"[object Date]\"===kt(t))e=new Date(t.getTime?t.getTime():t);else if(function(t){return\"[object RegExp]\"===kt(t)}(t))e=new RegExp(t);else if(function(t){return\"[object Error]\"===kt(t)}(t))e={message:t.message};else if(function(t){return\"[object Boolean]\"===kt(t)}(t))e=new Boolean(t);else if(function(t){return\"[object Number]\"===kt(t)}(t))e=new Number(t);else if(function(t){return\"[object String]\"===kt(t)}(t))e=new String(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var n=t.constructor&&t.constructor.prototype||t.__proto__||{},o=function(){};o.prototype=n,e=new o}return jt(Dt(t),(function(n){e[n]=t[n]})),e}return t}Ft.prototype.get=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o)){e=void 0;break}e=e[o]}return e},Ft.prototype.has=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o))return!1;e=e[o]}return!0},Ft.prototype.set=function(t,e){for(var n=this.value,o=0;o<t.length-1;o++){var r=t[o];Vt.call(n,r)||(n[r]={}),n=n[r]}return n[t[o]]=e,e},Ft.prototype.map=function(t){return wt(this.value,t,!0)},Ft.prototype.forEach=function(t){return this.value=wt(this.value,t,!1),this.value},Ft.prototype.reduce=function(t,e){var n=1===arguments.length,o=n?this.value:e;return this.forEach((function(e){this.isRoot&&n||(o=t.call(this,o,e))})),o},Ft.prototype.paths=function(){var t=[];return this.forEach((function(e){t.push(this.path)})),t},Ft.prototype.nodes=function(){var t=[];return this.forEach((function(e){t.push(this.node)})),t},Ft.prototype.clone=function(){var t=[],e=[];return function n(o){for(var r=0;r<t.length;r++)if(t[r]===o)return e[r];if(\"object\"==typeof o&&null!==o){var i=Rt(o);return t.push(o),e.push(i),jt(Dt(o),(function(t){i[t]=n(o[t])})),t.pop(),e.pop(),i}return o}(this.value)};var Dt=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};function kt(t){return Object.prototype.toString.call(t)}var Ut=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)},jt=function(t,e){if(t.forEach)return t.forEach(e);for(var n=0;n<t.length;n++)e(t[n],n,t)};jt(Dt(Ft.prototype),(function(t){Pt[t]=function(e){var n=[].slice.call(arguments,1),o=new Ft(e);return o[t].apply(o,n)}}));var Vt=Object.hasOwnProperty||function(t,e){return e in t},Bt=At.exports,Gt=Jt;function Jt(t){if(!(this instanceof Jt))return new Jt(t);this._bbox=t||[1/0,1/0,-1/0,-1/0],this._valid=!!t}Jt.prototype.include=function(t){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],t[0]),this._bbox[1]=Math.min(this._bbox[1],t[1]),this._bbox[2]=Math.max(this._bbox[2],t[0]),this._bbox[3]=Math.max(this._bbox[3],t[1]),this},Jt.prototype.equals=function(t){var e;return e=t instanceof Jt?t.bbox():t,this._bbox[0]==e[0]&&this._bbox[1]==e[1]&&this._bbox[2]==e[2]&&this._bbox[3]==e[3]},Jt.prototype.center=function(t){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},Jt.prototype.union=function(t){var e;return this._valid=!0,e=t instanceof Jt?t.bbox():t,this._bbox[0]=Math.min(this._bbox[0],e[0]),this._bbox[1]=Math.min(this._bbox[1],e[1]),this._bbox[2]=Math.max(this._bbox[2],e[2]),this._bbox[3]=Math.max(this._bbox[3],e[3]),this},Jt.prototype.bbox=function(){return this._valid?this._bbox:null},Jt.prototype.contains=function(t){if(!t)return this._fastContains();if(!this._valid)return null;var e=t[0],n=t[1];return this._bbox[0]<=e&&this._bbox[1]<=n&&this._bbox[2]>=e&&this._bbox[3]>=n},Jt.prototype.intersect=function(t){return this._valid?(e=t instanceof Jt?t.bbox():t,!(this._bbox[0]>e[2]||this._bbox[2]<e[0]||this._bbox[3]<e[1]||this._bbox[1]>e[3])):null;var e},Jt.prototype._fastContains=function(){if(!this._valid)return new Function(\"return null;\");var t=\"return \"+this._bbox[0]+\"<= ll[0] &&\"+this._bbox[1]+\"<= ll[1] &&\"+this._bbox[2]+\">= ll[0] &&\"+this._bbox[3]+\">= ll[1]\";return new Function(\"ll\",t)},Jt.prototype.polygon=function(){return this._valid?{type:\"Polygon\",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null};var zt=function(t){if(!t)return[];var e=Lt(Mt(t)),n=[];return e.features.forEach((function(t){t.geometry&&(n=n.concat(Nt(t.geometry.coordinates)))})),n},Yt=Bt,$t=Gt,qt={features:[\"FeatureCollection\"],coordinates:[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],geometry:[\"Feature\"],geometries:[\"GeometryCollection\"]},Ht=Object.keys(qt);function Xt(t){for(var e=$t(),n=zt(t),o=0;o<n.length;o++)e.include(n[o]);return e}Ct.exports=function(t){return Xt(t).bbox()},Ct.exports.polygon=function(t){return Xt(t).polygon()},Ct.exports.bboxify=function(t){return Yt(t).map((function(t){t&&(Ht.some((function(e){return!!t[e]&&-1!==qt[e].indexOf(t.type)}))&&(t.bbox=Xt(t).bbox(),this.update(t)))}))};var Zt=e(Ct.exports),Wt=-90;function Kt(t,e){var n=Wt,o=90,r=Wt,i=90,a=270,s=-270;t.forEach((function(t){var e=Zt(t),u=e[1],c=e[3],l=e[0],d=e[2];u>n&&(n=u),c<o&&(o=c),c>r&&(r=c),u<i&&(i=u),l<a&&(a=l),d>s&&(s=d)}));var u=e;return n+u.lat>85&&(u.lat=85-n),r+u.lat>90&&(u.lat=90-r),o+u.lat<-85&&(u.lat=-85-o),i+u.lat<Wt&&(u.lat=Wt-i),a+u.lng<=-270&&(u.lng+=360*Math.ceil(Math.abs(u.lng)/360)),s+u.lng>=270&&(u.lng-=360*Math.ceil(Math.abs(u.lng)/360)),u}function Qt(t,e){var n=Kt(t.map((function(t){return t.toGeoJSON()})),e);t.forEach((function(t){var e,o=t.getCoordinates(),r=function(t){var e={lng:t[0]+n.lng,lat:t[1]+n.lat};return[e.lng,e.lat]},i=function(t){return t.map((function(t){return r(t)}))};t.type===f.POINT?e=r(o):t.type===f.LINE_STRING||t.type===f.MULTI_POINT?e=o.map(r):t.type===f.POLYGON||t.type===f.MULTI_LINE_STRING?e=o.map(i):t.type===f.MULTI_POLYGON&&(e=o.map((function(t){return t.map((function(t){return i(t)}))}))),t.incomingCoords(e)}))}var te={onSetup:function(t){var e=this,n={dragMoveLocation:null,boxSelectStartLocation:null,boxSelectElement:void 0,boxSelecting:!1,canBoxSelect:!1,dragMoving:!1,canDragMove:!1,initiallySelectedFeatureIds:t.featureIds||[]};return this.setSelected(n.initiallySelectedFeatureIds.filter((function(t){return void 0!==e.getFeature(t)}))),this.fireActionable(),this.setActionableState({combineFeatures:!0,uncombineFeatures:!0,trash:!0}),n},fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.MOVE,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(){var t=this,e=this.getSelected(),n=e.filter((function(e){return t.isInstanceOf(\"MultiFeature\",e)})),o=!1;if(e.length>1){o=!0;var r=e[0].type.replace(\"Multi\",\"\");e.forEach((function(t){t.type.replace(\"Multi\",\"\")!==r&&(o=!1)}))}var i=n.length>0,a=e.length>0;this.setActionableState({combineFeatures:o,uncombineFeatures:i,trash:a})},getUniqueIds:function(t){return t.length?t.map((function(t){return t.properties.id})).filter((function(t){return void 0!==t})).reduce((function(t,e){return t.add(e),t}),new I).values():[]},stopExtendedInteractions:function(t){t.boxSelectElement&&(t.boxSelectElement.parentNode&&t.boxSelectElement.parentNode.removeChild(t.boxSelectElement),t.boxSelectElement=null),this.map.dragPan.enable(),t.boxSelecting=!1,t.canBoxSelect=!1,t.dragMoving=!1,t.canDragMove=!1},onStop:function(){Tt.enable(this)},onMouseMove:function(t,e){return ct(e)&&t.dragMoving&&this.fireUpdate(),this.stopExtendedInteractions(t),!0},onMouseOut:function(t){return!t.dragMoving||this.fireUpdate()}};te.onTap=te.onClick=function(t,e){return ut(e)?this.clickAnywhere(t,e):rt(v.VERTEX)(e)?this.clickOnVertex(t,e):ct(e)?this.clickOnFeature(t,e):void 0},te.clickAnywhere=function(t){var e=this,n=this.getSelectedIds();n.length&&(this.clearSelectedFeatures(),n.forEach((function(t){return e.doRender(t)}))),Tt.enable(this),this.stopExtendedInteractions(t)},te.clickOnVertex=function(t,e){this.changeMode(h.DIRECT_SELECT,{featureId:e.featureTarget.properties.parent,coordPath:e.featureTarget.properties.coord_path,startPos:e.lngLat}),this.updateUIClasses({mouse:d.MOVE})},te.startOnActiveFeature=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),this.doRender(e.featureTarget.properties.id),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},te.clickOnFeature=function(t,e){var n=this;Tt.disable(this),this.stopExtendedInteractions(t);var o=dt(e),r=this.getSelectedIds(),i=e.featureTarget.properties.id,a=this.isSelected(i);if(!o&&a&&this.getFeature(i).type!==f.POINT)return this.changeMode(h.DIRECT_SELECT,{featureId:i});a&&o?(this.deselect(i),this.updateUIClasses({mouse:d.POINTER}),1===r.length&&Tt.enable(this)):!a&&o?(this.select(i),this.updateUIClasses({mouse:d.MOVE})):a||o||(r.forEach((function(t){return n.doRender(t)})),this.setSelected(i),this.updateUIClasses({mouse:d.MOVE})),this.doRender(i)},te.onMouseDown=function(t,e){return at(e)?this.startOnActiveFeature(t,e):this.drawConfig.boxSelect&&it(e)?this.startBoxSelect(t,e):void 0},te.startBoxSelect=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),t.boxSelectStartLocation=mt(e.originalEvent,this.map.getContainer()),t.canBoxSelect=!0},te.onTouchStart=function(t,e){if(at(e))return this.startOnActiveFeature(t,e)},te.onDrag=function(t,e){return t.canDragMove?this.dragMove(t,e):this.drawConfig.boxSelect&&t.canBoxSelect?this.whileBoxSelect(t,e):void 0},te.whileBoxSelect=function(t,e){t.boxSelecting=!0,this.updateUIClasses({mouse:d.ADD}),t.boxSelectElement||(t.boxSelectElement=document.createElement(\"div\"),t.boxSelectElement.classList.add(c.BOX_SELECT),this.map.getContainer().appendChild(t.boxSelectElement));var n=mt(e.originalEvent,this.map.getContainer()),o=Math.min(t.boxSelectStartLocation.x,n.x),r=Math.max(t.boxSelectStartLocation.x,n.x),i=Math.min(t.boxSelectStartLocation.y,n.y),a=Math.max(t.boxSelectStartLocation.y,n.y),s=\"translate(\"+o+\"px, \"+i+\"px)\";t.boxSelectElement.style.transform=s,t.boxSelectElement.style.WebkitTransform=s,t.boxSelectElement.style.width=r-o+\"px\",t.boxSelectElement.style.height=a-i+\"px\"},te.dragMove=function(t,e){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},te.onTouchEnd=te.onMouseUp=function(t,e){var n=this;if(t.dragMoving)this.fireUpdate();else if(t.boxSelecting){var o=[t.boxSelectStartLocation,mt(e.originalEvent,this.map.getContainer())],r=this.featuresAt(null,o,\"click\"),i=this.getUniqueIds(r).filter((function(t){return!n.isSelected(t)}));i.length&&(this.select(i),i.forEach((function(t){return n.doRender(t)})),this.updateUIClasses({mouse:d.MOVE}))}this.stopExtendedInteractions(t)},te.toDisplayFeatures=function(t,e,n){e.properties.active=this.isSelected(e.properties.id)?m.ACTIVE:m.INACTIVE,n(e),this.fireActionable(),e.properties.active===m.ACTIVE&&e.geometry.type!==f.POINT&&Et(e).forEach(n)},te.onTrash=function(){this.deleteFeature(this.getSelectedIds()),this.fireActionable()},te.onCombineFeatures=function(){var t=this.getSelected();if(!(0===t.length||t.length<2)){for(var e=[],n=[],o=t[0].type.replace(\"Multi\",\"\"),r=0;r<t.length;r++){var i=t[r];if(i.type.replace(\"Multi\",\"\")!==o)return;i.type.includes(\"Multi\")?i.getCoordinates().forEach((function(t){e.push(t)})):e.push(i.getCoordinates()),n.push(i.toGeoJSON())}if(n.length>1){var a=this.newFeature({type:f.FEATURE,properties:n[0].properties,geometry:{type:\"Multi\"+o,coordinates:e}});this.addFeature(a),this.deleteFeature(this.getSelectedIds(),{silent:!0}),this.setSelected([a.id]),this.map.fire(g.COMBINE_FEATURES,{createdFeatures:[a.toGeoJSON()],deletedFeatures:n})}this.fireActionable()}},te.onUncombineFeatures=function(){var t=this,e=this.getSelected();if(0!==e.length){for(var n=[],o=[],r=function(r){var i=e[r];t.isInstanceOf(\"MultiFeature\",i)&&(i.getFeatures().forEach((function(e){t.addFeature(e),e.properties=i.properties,n.push(e.toGeoJSON()),t.select([e.id])})),t.deleteFeature(i.id,{silent:!0}),o.push(i.toGeoJSON()))},i=0;i<e.length;i++)r(i);n.length>1&&this.map.fire(g.UNCOMBINE_FEATURES,{createdFeatures:n,deletedFeatures:o}),this.fireActionable()}};var ee=rt(v.VERTEX),ne=rt(v.MIDPOINT),oe={fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.CHANGE_COORDINATES,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(t){this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:t.selectedCoordPaths.length>0})},startDragging:function(t,e){this.map.dragPan.disable(),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},stopDragging:function(t){this.map.dragPan.enable(),t.dragMoving=!1,t.canDragMove=!1,t.dragMoveLocation=null},onVertex:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties,o=t.selectedCoordPaths.indexOf(n.coord_path);dt(e)||-1!==o?dt(e)&&-1===o&&t.selectedCoordPaths.push(n.coord_path):t.selectedCoordPaths=[n.coord_path];var r=this.pathsToCoordinates(t.featureId,t.selectedCoordPaths);this.setSelectedCoordinates(r)},onMidpoint:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties;t.feature.addCoordinate(n.coord_path,n.lng,n.lat),this.fireUpdate(),t.selectedCoordPaths=[n.coord_path]},pathsToCoordinates:function(t,e){return e.map((function(e){return{feature_id:t,coord_path:e}}))},onFeature:function(t,e){0===t.selectedCoordPaths.length?this.startDragging(t,e):this.stopDragging(t)},dragFeature:function(t,e,n){Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},dragVertex:function(t,e,n){for(var o=t.selectedCoordPaths.map((function(e){return t.feature.getCoordinate(e)})),r=Kt(o.map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t}}})),n),i=0;i<o.length;i++){var a=o[i];t.feature.updateCoordinate(t.selectedCoordPaths[i],a[0]+r.lng,a[1]+r.lat)}},clickNoTarget:function(){this.changeMode(h.SIMPLE_SELECT)},clickInactive:function(){this.changeMode(h.SIMPLE_SELECT)},clickActiveFeature:function(t){t.selectedCoordPaths=[],this.clearSelectedCoordinates(),t.feature.changed()},onSetup:function(t){var e=t.featureId,n=this.getFeature(e);if(!n)throw new Error(\"You must provide a featureId to enter direct_select mode\");if(n.type===f.POINT)throw new TypeError(\"direct_select mode doesn't handle point features\");var o={featureId:e,feature:n,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[]};return this.setSelectedCoordinates(this.pathsToCoordinates(e,o.selectedCoordPaths)),this.setSelected(e),Tt.disable(this),this.setActionableState({trash:!0}),o},onStop:function(){Tt.enable(this),this.clearSelectedCoordinates()},toDisplayFeatures:function(t,e,n){t.featureId===e.properties.id?(e.properties.active=m.ACTIVE,n(e),Et(e,{map:this.map,midpoints:!0,selectedPaths:t.selectedCoordPaths}).forEach(n)):(e.properties.active=m.INACTIVE,n(e)),this.fireActionable(t)},onTrash:function(t){t.selectedCoordPaths.sort((function(t,e){return e.localeCompare(t,\"en\",{numeric:!0})})).forEach((function(e){return t.feature.removeCoordinate(e)})),this.fireUpdate(),t.selectedCoordPaths=[],this.clearSelectedCoordinates(),this.fireActionable(t),!1===t.feature.isValid()&&(this.deleteFeature([t.featureId]),this.changeMode(h.SIMPLE_SELECT,{}))},onMouseMove:function(t,e){var n=at(e),o=ee(e),r=ne(e),i=0===t.selectedCoordPaths.length;return n&&i||o&&!i?this.updateUIClasses({mouse:d.MOVE}):this.updateUIClasses({mouse:d.NONE}),(o||n||r)&&t.dragMoving&&this.fireUpdate(),this.stopDragging(t),!0},onMouseOut:function(t){return t.dragMoving&&this.fireUpdate(),!0}};oe.onTouchStart=oe.onMouseDown=function(t,e){return ee(e)?this.onVertex(t,e):at(e)?this.onFeature(t,e):ne(e)?this.onMidpoint(t,e):void 0},oe.onDrag=function(t,e){if(!0===t.canDragMove){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};t.selectedCoordPaths.length>0?this.dragVertex(t,e,n):this.dragFeature(t,e,n),t.dragMoveLocation=e.lngLat}},oe.onClick=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void this.stopDragging(t)},oe.onTap=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void 0},oe.onTouchEnd=oe.onMouseUp=function(t){t.dragMoving&&this.fireUpdate(),this.stopDragging(t)};var re={};function ie(t,e){return!!t.lngLat&&(t.lngLat.lng===e[0]&&t.lngLat.lat===e[1])}re.onSetup=function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:[]}});return this.addFeature(t),this.clearSelectedFeatures(),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POINT),this.setActionableState({trash:!0}),{point:t}},re.stopDrawingAndRemove=function(t){this.deleteFeature([t.point.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},re.onTap=re.onClick=function(t,e){this.updateUIClasses({mouse:d.MOVE}),t.point.updateCoordinate(\"\",e.lngLat.lng,e.lngLat.lat),this.map.fire(g.CREATE,{features:[t.point.toGeoJSON()]}),this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.point.id]})},re.onStop=function(t){this.activateUIButton(),t.point.getCoordinate().length||this.deleteFeature([t.point.id],{silent:!0})},re.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.point.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e)},re.onTrash=re.stopDrawingAndRemove,re.onKeyUp=function(t,e){if(pt(e)||ft(e))return this.stopDrawingAndRemove(t,e)};var ae={onSetup:function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POLYGON,coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POLYGON),this.setActionableState({trash:!0}),{polygon:t,currentVertexPosition:0}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.polygon.coordinates[0][t.currentVertexPosition-1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]});this.updateUIClasses({mouse:d.ADD}),t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),t.currentVertexPosition++,t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},onMouseMove:function(t,e){t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};ae.onTap=ae.onClick=function(t,e){return lt(e)?this.clickOnVertex(t,e):this.clickAnywhere(t,e)},ae.onKeyUp=function(t,e){pt(e)?(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)):ft(e)&&this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},ae.onStop=function(t){this.updateUIClasses({mouse:d.NONE}),Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.polygon.id)&&(t.polygon.removeCoordinate(\"0.\"+t.currentVertexPosition),t.polygon.isValid()?this.map.fire(g.CREATE,{features:[t.polygon.toGeoJSON()]}):(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},ae.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.polygon.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);if(0!==e.geometry.coordinates.length){var r=e.geometry.coordinates[0].length;if(!(r<3)){if(e.properties.meta=v.FEATURE,n(_t(t.polygon.id,e.geometry.coordinates[0][0],\"0.0\",!1)),r>3){var i=e.geometry.coordinates[0].length-3;n(_t(t.polygon.id,e.geometry.coordinates[0][i],\"0.\"+i,!1))}if(r<=4){var a=[[e.geometry.coordinates[0][0][0],e.geometry.coordinates[0][0][1]],[e.geometry.coordinates[0][1][0],e.geometry.coordinates[0][1][1]]];if(n({type:f.FEATURE,properties:e.properties,geometry:{coordinates:a,type:f.LINE_STRING}}),3===r)return}return n(e)}}},ae.onTrash=function(t){this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)};var se={onSetup:function(t){var e,n,o=(t=t||{}).featureId,r=\"forward\";if(o){if(!(e=this.getFeature(o)))throw new Error(\"Could not find a feature with the provided featureId\");var i=t.from;if(i&&\"Feature\"===i.type&&i.geometry&&\"Point\"===i.geometry.type&&(i=i.geometry),i&&\"Point\"===i.type&&i.coordinates&&2===i.coordinates.length&&(i=i.coordinates),!i||!Array.isArray(i))throw new Error(\"Please use the `from` property to indicate which point to continue the line from\");var a=e.coordinates.length-1;if(e.coordinates[a][0]===i[0]&&e.coordinates[a][1]===i[1])n=a+1,e.addCoordinate.apply(e,[n].concat(e.coordinates[a]));else{if(e.coordinates[0][0]!==i[0]||e.coordinates[0][1]!==i[1])throw new Error(\"`from` should match the point at either the start or the end of the provided LineString\");r=\"backwards\",n=0,e.addCoordinate.apply(e,[n].concat(e.coordinates[0]))}}else e=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.LINE_STRING,coordinates:[]}}),n=0,this.addFeature(e);return this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.LINE),this.setActionableState({trash:!0}),{line:e,currentVertexPosition:n,direction:r}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.line.coordinates[t.currentVertexPosition-1])||\"backwards\"===t.direction&&ie(e,t.line.coordinates[t.currentVertexPosition+1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]});this.updateUIClasses({mouse:d.ADD}),t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),\"forward\"===t.direction?(t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):t.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]})},onMouseMove:function(t,e){t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};se.onTap=se.onClick=function(t,e){if(lt(e))return this.clickOnVertex(t,e);this.clickAnywhere(t,e)},se.onKeyUp=function(t,e){ft(e)?this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]}):pt(e)&&(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT))},se.onStop=function(t){Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.line.id)&&(t.line.removeCoordinate(\"\"+t.currentVertexPosition),t.line.isValid()?this.map.fire(g.CREATE,{features:[t.line.toGeoJSON()]}):(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},se.onTrash=function(t){this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},se.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.line.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);e.geometry.coordinates.length<2||(e.properties.meta=v.FEATURE,n(_t(t.line.id,e.geometry.coordinates[\"forward\"===t.direction?e.geometry.coordinates.length-2:1],\"\"+(\"forward\"===t.direction?e.geometry.coordinates.length-2:1),!1)),n(e))};var ue={simple_select:te,direct_select:oe,draw_point:re,draw_polygon:ae,draw_line_string:se},ce={defaultMode:h.SIMPLE_SELECT,keybindings:!0,touchEnabled:!0,clickBuffer:2,touchBuffer:25,boxSelect:!0,displayControlsDefault:!0,styles:ot,modes:ue,controls:{},userProperties:!1},le={point:!0,line_string:!0,polygon:!0,trash:!0,combine_features:!0,uncombine_features:!0},de={point:!1,line_string:!1,polygon:!1,trash:!1,combine_features:!1,uncombine_features:!1};function pe(t,e){return t.map((function(t){return t.source?t:tt(t,{id:t.id+\".\"+e,source:\"hot\"===e?l.HOT:l.COLD})}))}var fe={exports:{}};!function(t,e){var n=\"__lodash_hash_undefined__\",o=9007199254740991,r=\"[object Arguments]\",i=\"[object Array]\",a=\"[object Boolean]\",s=\"[object Date]\",u=\"[object Error]\",c=\"[object Function]\",l=\"[object Map]\",d=\"[object Number]\",p=\"[object Object]\",f=\"[object Promise]\",h=\"[object RegExp]\",g=\"[object Set]\",y=\"[object String]\",v=\"[object Symbol]\",m=\"[object WeakMap]\",_=\"[object ArrayBuffer]\",b=\"[object DataView]\",E=/^\\[object .+?Constructor\\]$/,T=/^(?:0|[1-9]\\d*)$/,C={};C[\"[object Float32Array]\"]=C[\"[object Float64Array]\"]=C[\"[object Int8Array]\"]=C[\"[object Int16Array]\"]=C[\"[object Int32Array]\"]=C[\"[object Uint8Array]\"]=C[\"[object Uint8ClampedArray]\"]=C[\"[object Uint16Array]\"]=C[\"[object Uint32Array]\"]=!0,C[r]=C[i]=C[_]=C[a]=C[b]=C[s]=C[u]=C[c]=C[l]=C[d]=C[p]=C[h]=C[g]=C[y]=C[m]=!1;var O=\"object\"==typeof global&&global&&global.Object===Object&&global,S=\"object\"==typeof self&&self&&self.Object===Object&&self,I=O||S||Function(\"return this\")(),x=e&&!e.nodeType&&e,M=x&&t&&!t.nodeType&&t,L=M&&M.exports===x,N=L&&O.process,A=function(){try{return N&&N.binding&&N.binding(\"util\")}catch(t){}}(),P=A&&A.isTypedArray;function F(t,e){for(var n=-1,o=null==t?0:t.length;++n<o;)if(e(t[n],n,t))return!0;return!1}function w(t){var e=-1,n=Array(t.size);return t.forEach((function(t,o){n[++e]=[o,t]})),n}function R(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}var D,k,U,j=Array.prototype,V=Function.prototype,B=Object.prototype,G=I[\"__core-js_shared__\"],J=V.toString,z=B.hasOwnProperty,Y=(D=/[^.]+$/.exec(G&&G.keys&&G.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+D:\"\",$=B.toString,q=RegExp(\"^\"+J.call(z).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),H=L?I.Buffer:void 0,X=I.Symbol,Z=I.Uint8Array,W=B.propertyIsEnumerable,K=j.splice,Q=X?X.toStringTag:void 0,tt=Object.getOwnPropertySymbols,et=H?H.isBuffer:void 0,nt=(k=Object.keys,U=Object,function(t){return k(U(t))}),ot=At(I,\"DataView\"),rt=At(I,\"Map\"),it=At(I,\"Promise\"),at=At(I,\"Set\"),st=At(I,\"WeakMap\"),ut=At(Object,\"create\"),ct=Rt(ot),lt=Rt(rt),dt=Rt(it),pt=Rt(at),ft=Rt(st),ht=X?X.prototype:void 0,gt=ht?ht.valueOf:void 0;function yt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function vt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function mt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function _t(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new mt;++e<n;)this.add(t[e])}function bt(t){var e=this.__data__=new vt(t);this.size=e.size}function Et(t,e){var n=Ut(t),o=!n&&kt(t),r=!n&&!o&&jt(t),i=!n&&!o&&!r&&zt(t),a=n||o||r||i,s=a?function(t,e){for(var n=-1,o=Array(t);++n<t;)o[n]=e(n);return o}(t.length,String):[],u=s.length;for(var c in t)!e&&!z.call(t,c)||a&&(\"length\"==c||r&&(\"offset\"==c||\"parent\"==c)||i&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||wt(c,u))||s.push(c);return s}function Tt(t,e){for(var n=t.length;n--;)if(Dt(t[n][0],e))return n;return-1}function Ct(t){return null==t?void 0===t?\"[object Undefined]\":\"[object Null]\":Q&&Q in Object(t)?function(t){var e=z.call(t,Q),n=t[Q];try{t[Q]=void 0;var o=!0}catch(t){}var r=$.call(t);o&&(e?t[Q]=n:delete t[Q]);return r}(t):function(t){return $.call(t)}(t)}function Ot(t){return Jt(t)&&Ct(t)==r}function St(t,e,n,o,c){return t===e||(null==t||null==e||!Jt(t)&&!Jt(e)?t!=t&&e!=e:function(t,e,n,o,c,f){var m=Ut(t),E=Ut(e),T=m?i:Ft(t),C=E?i:Ft(e),O=(T=T==r?p:T)==p,S=(C=C==r?p:C)==p,I=T==C;if(I&&jt(t)){if(!jt(e))return!1;m=!0,O=!1}if(I&&!O)return f||(f=new bt),m||zt(t)?Mt(t,e,n,o,c,f):function(t,e,n,o,r,i,c){switch(n){case b:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case _:return!(t.byteLength!=e.byteLength||!i(new Z(t),new Z(e)));case a:case s:case d:return Dt(+t,+e);case u:return t.name==e.name&&t.message==e.message;case h:case y:return t==e+\"\";case l:var p=w;case g:var f=1&o;if(p||(p=R),t.size!=e.size&&!f)return!1;var m=c.get(t);if(m)return m==e;o|=2,c.set(t,e);var E=Mt(p(t),p(e),o,r,i,c);return c.delete(t),E;case v:if(gt)return gt.call(t)==gt.call(e)}return!1}(t,e,T,n,o,c,f);if(!(1&n)){var x=O&&z.call(t,\"__wrapped__\"),M=S&&z.call(e,\"__wrapped__\");if(x||M){var L=x?t.value():t,N=M?e.value():e;return f||(f=new bt),c(L,N,n,o,f)}}if(!I)return!1;return f||(f=new bt),function(t,e,n,o,r,i){var a=1&n,s=Lt(t),u=s.length,c=Lt(e).length;if(u!=c&&!a)return!1;var l=u;for(;l--;){var d=s[l];if(!(a?d in e:z.call(e,d)))return!1}var p=i.get(t);if(p&&i.get(e))return p==e;var f=!0;i.set(t,e),i.set(e,t);var h=a;for(;++l<u;){var g=t[d=s[l]],y=e[d];if(o)var v=a?o(y,g,d,e,t,i):o(g,y,d,t,e,i);if(!(void 0===v?g===y||r(g,y,n,o,i):v)){f=!1;break}h||(h=\"constructor\"==d)}if(f&&!h){var m=t.constructor,_=e.constructor;m==_||!(\"constructor\"in t)||!(\"constructor\"in e)||\"function\"==typeof m&&m instanceof m&&\"function\"==typeof _&&_ instanceof _||(f=!1)}return i.delete(t),i.delete(e),f}(t,e,n,o,c,f)}(t,e,n,o,St,c))}function It(t){return!(!Gt(t)||function(t){return!!Y&&Y in t}(t))&&(Vt(t)?q:E).test(Rt(t))}function xt(t){if(n=(e=t)&&e.constructor,o=\"function\"==typeof n&&n.prototype||B,e!==o)return nt(t);var e,n,o,r=[];for(var i in Object(t))z.call(t,i)&&\"constructor\"!=i&&r.push(i);return r}function Mt(t,e,n,o,r,i){var a=1&n,s=t.length,u=e.length;if(s!=u&&!(a&&u>s))return!1;var c=i.get(t);if(c&&i.get(e))return c==e;var l=-1,d=!0,p=2&n?new _t:void 0;for(i.set(t,e),i.set(e,t);++l<s;){var f=t[l],h=e[l];if(o)var g=a?o(h,f,l,e,t,i):o(f,h,l,t,e,i);if(void 0!==g){if(g)continue;d=!1;break}if(p){if(!F(e,(function(t,e){if(a=e,!p.has(a)&&(f===t||r(f,t,n,o,i)))return p.push(e);var a}))){d=!1;break}}else if(f!==h&&!r(f,h,n,o,i)){d=!1;break}}return i.delete(t),i.delete(e),d}function Lt(t){return function(t,e,n){var o=e(t);return Ut(t)?o:function(t,e){for(var n=-1,o=e.length,r=t.length;++n<o;)t[r+n]=e[n];return t}(o,n(t))}(t,Yt,Pt)}function Nt(t,e){var n,o,r=t.__data__;return(\"string\"==(o=typeof(n=e))||\"number\"==o||\"symbol\"==o||\"boolean\"==o?\"__proto__\"!==n:null===n)?r[\"string\"==typeof e?\"string\":\"hash\"]:r.map}function At(t,e){var n=function(t,e){return null==t?void 0:t[e]}(t,e);return It(n)?n:void 0}yt.prototype.clear=function(){this.__data__=ut?ut(null):{},this.size=0},yt.prototype.delete=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},yt.prototype.get=function(t){var e=this.__data__;if(ut){var o=e[t];return o===n?void 0:o}return z.call(e,t)?e[t]:void 0},yt.prototype.has=function(t){var e=this.__data__;return ut?void 0!==e[t]:z.call(e,t)},yt.prototype.set=function(t,e){var o=this.__data__;return this.size+=this.has(t)?0:1,o[t]=ut&&void 0===e?n:e,this},vt.prototype.clear=function(){this.__data__=[],this.size=0},vt.prototype.delete=function(t){var e=this.__data__,n=Tt(e,t);return!(n<0)&&(n==e.length-1?e.pop():K.call(e,n,1),--this.size,!0)},vt.prototype.get=function(t){var e=this.__data__,n=Tt(e,t);return n<0?void 0:e[n][1]},vt.prototype.has=function(t){return Tt(this.__data__,t)>-1},vt.prototype.set=function(t,e){var n=this.__data__,o=Tt(n,t);return o<0?(++this.size,n.push([t,e])):n[o][1]=e,this},mt.prototype.clear=function(){this.size=0,this.__data__={hash:new yt,map:new(rt||vt),string:new yt}},mt.prototype.delete=function(t){var e=Nt(this,t).delete(t);return this.size-=e?1:0,e},mt.prototype.get=function(t){return Nt(this,t).get(t)},mt.prototype.has=function(t){return Nt(this,t).has(t)},mt.prototype.set=function(t,e){var n=Nt(this,t),o=n.size;return n.set(t,e),this.size+=n.size==o?0:1,this},_t.prototype.add=_t.prototype.push=function(t){return this.__data__.set(t,n),this},_t.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.clear=function(){this.__data__=new vt,this.size=0},bt.prototype.delete=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n},bt.prototype.get=function(t){return this.__data__.get(t)},bt.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.set=function(t,e){var n=this.__data__;if(n instanceof vt){var o=n.__data__;if(!rt||o.length<199)return o.push([t,e]),this.size=++n.size,this;n=this.__data__=new mt(o)}return n.set(t,e),this.size=n.size,this};var Pt=tt?function(t){return null==t?[]:(t=Object(t),function(t,e){for(var n=-1,o=null==t?0:t.length,r=0,i=[];++n<o;){var a=t[n];e(a,n,t)&&(i[r++]=a)}return i}(tt(t),(function(e){return W.call(t,e)})))}:function(){return[]},Ft=Ct;function wt(t,e){return!!(e=null==e?o:e)&&(\"number\"==typeof t||T.test(t))&&t>-1&&t%1==0&&t<e}function Rt(t){if(null!=t){try{return J.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}function Dt(t,e){return t===e||t!=t&&e!=e}(ot&&Ft(new ot(new ArrayBuffer(1)))!=b||rt&&Ft(new rt)!=l||it&&Ft(it.resolve())!=f||at&&Ft(new at)!=g||st&&Ft(new st)!=m)&&(Ft=function(t){var e=Ct(t),n=e==p?t.constructor:void 0,o=n?Rt(n):\"\";if(o)switch(o){case ct:return b;case lt:return l;case dt:return f;case pt:return g;case ft:return m}return e});var kt=Ot(function(){return arguments}())?Ot:function(t){return Jt(t)&&z.call(t,\"callee\")&&!W.call(t,\"callee\")},Ut=Array.isArray;var jt=et||function(){return!1};function Vt(t){if(!Gt(t))return!1;var e=Ct(t);return e==c||\"[object GeneratorFunction]\"==e||\"[object AsyncFunction]\"==e||\"[object Proxy]\"==e}function Bt(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=o}function Gt(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}function Jt(t){return null!=t&&\"object\"==typeof t}var zt=P?function(t){return function(e){return t(e)}}(P):function(t){return Jt(t)&&Bt(t.length)&&!!C[Ct(t)]};function Yt(t){return null!=(e=t)&&Bt(e.length)&&!Vt(e)?Et(t):xt(t);var e}t.exports=function(t,e){return St(t,e)}}(fe,fe.exports);var he=e(fe.exports);function ge(t,e){return t.length===e.length&&JSON.stringify(t.map((function(t){return t})).sort())===JSON.stringify(e.map((function(t){return t})).sort())}var ye={Polygon:V,LineString:j,Point:U,MultiPolygon:J,MultiLineString:J,MultiPoint:J};var ve=Object.freeze({__proto__:null,CommonSelectors:ht,constrainFeatureMovement:Kt,createMidPoint:bt,createSupplementaryPoints:Et,createVertex:_t,doubleClickZoom:Tt,euclideanDistance:A,featuresAt:M,getFeatureAtAndSetCursors:N,isClick:P,isEventAtCoordinates:ie,isTap:F,mapEventToBoundingBox:S,ModeHandler:t,moveFeatures:Qt,sortFeatures:O,stringSetsAreEqual:ge,StringSet:I,theme:ot,toDenseArray:H}),me=function(t,e){var n={options:t=function(t){void 0===t&&(t={});var e=tt(t);return t.controls||(e.controls={}),!1===t.displayControlsDefault?e.controls=tt(de,t.controls):e.controls=tt(le,t.controls),(e=tt(ce,e)).styles=pe(e.styles,\"cold\").concat(pe(e.styles,\"hot\")),e}(t)};e=function(t,e){return e.modes=h,e.getFeatureIdsAt=function(e){return M.click({point:e},null,t).map((function(t){return t.properties.id}))},e.getSelectedIds=function(){return t.store.getSelectedIds()},e.getSelected=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedIds().map((function(e){return t.store.get(e)})).map((function(t){return t.toGeoJSON()}))}},e.getSelectedPoints=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}},e.set=function(n){if(void 0===n.type||n.type!==f.FEATURE_COLLECTION||!Array.isArray(n.features))throw new Error(\"Invalid FeatureCollection\");var o=t.store.createRenderBatch(),r=t.store.getAllIds().slice(),i=e.add(n),a=new I(i);return(r=r.filter((function(t){return!a.has(t)}))).length&&e.delete(r),o(),i},e.add=function(e){var n=JSON.parse(JSON.stringify(It(e))).features.map((function(e){if(e.id=e.id||D(),null===e.geometry)throw new Error(\"Invalid geometry: null\");if(void 0===t.store.get(e.id)||t.store.get(e.id).type!==e.geometry.type){var n=ye[e.geometry.type];if(void 0===n)throw new Error(\"Invalid geometry type: \"+e.geometry.type+\".\");var o=new n(t,e);t.store.add(o)}else{var r=t.store.get(e.id);r.properties=e.properties,he(r.getCoordinates(),e.geometry.coordinates)||r.incomingCoords(e.geometry.coordinates)}return e.id}));return t.store.render(),n},e.get=function(e){var n=t.store.get(e);if(n)return n.toGeoJSON()},e.getAll=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getAll().map((function(t){return t.toGeoJSON()}))}},e.delete=function(n){return t.store.delete(n,{silent:!0}),e.getMode()!==h.DIRECT_SELECT||t.store.getSelectedIds().length?t.store.render():t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}),e},e.deleteAll=function(){return t.store.delete(t.store.getAllIds(),{silent:!0}),e.getMode()===h.DIRECT_SELECT?t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}):t.store.render(),e},e.changeMode=function(n,o){return void 0===o&&(o={}),n===h.SIMPLE_SELECT&&e.getMode()===h.SIMPLE_SELECT?(ge(o.featureIds||[],t.store.getSelectedIds())||(t.store.setSelected(o.featureIds,{silent:!0}),t.store.render()),e):(n===h.DIRECT_SELECT&&e.getMode()===h.DIRECT_SELECT&&o.featureId===t.store.getSelectedIds()[0]||t.events.changeMode(n,o,{silent:!0}),e)},e.getMode=function(){return t.events.getMode()},e.trash=function(){return t.events.trash({silent:!0}),e},e.combineFeatures=function(){return t.events.combineFeatures({silent:!0}),e},e.uncombineFeatures=function(){return t.events.uncombineFeatures({silent:!0}),e},e.setFeatureProperty=function(n,o,r){return t.store.setFeatureProperty(n,o,r),e},e}(n,e),n.api=e;var o=nt(n);return e.onAdd=o.onAdd,e.onRemove=o.onRemove,e.types=p,e.options=t,e};function _e(t){me(t,this)}return _e.modes=ue,_e.constants=E,_e.lib=ve,_e}));\n//# sourceMappingURL=mapbox-gl-draw.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordAll = coordAll;\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.findPoint = findPoint;\nexports.findSegment = findSegment;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\n","var rbush = require('rbush');\nvar helpers = require('@turf/helpers');\nvar meta = require('@turf/meta');\nvar turfBBox = require('@turf/bbox').default;\nvar featureEach = meta.featureEach;\nvar coordEach = meta.coordEach;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var geojsonRbush = require('geojson-rbush').default;\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = new rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     * tree.insert(poly)\n     */\n    tree.insert = function (feature) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {FeatureCollection|Array<Feature>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polys = turf.polygons([\n     *     [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]],\n     *     [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     * ]);\n     * tree.load(polys);\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of Features\n        if (Array.isArray(features)) {\n            features.forEach(function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        } else {\n            // Load a FeatureCollection\n            featureEach(features, function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {Feature} feature remove single GeoJSON Feature\n     * @param {Function} equals Pass a custom equals function to compare by value for removal.\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.remove(poly);\n     */\n    tree.remove = function (feature, equals) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.remove.call(this, feature, equals);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson search with GeoJSON\n     * @returns {FeatureCollection} all features that intersects with the given GeoJSON.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.search(poly);\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(features);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.collides(poly);\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection} all the features in RBush\n     * @example\n     * tree.all()\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return featureCollection(features);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollection|Feature} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];\n        else if (geojson.type === 'Feature') bbox = turfBBox(geojson);\n        else if (geojson.type === 'FeatureCollection') bbox = turfBBox(geojson);\n        else throw new Error('invalid geojson')\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\nmodule.exports = geojsonRbush;\nmodule.exports.default = geojsonRbush;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord, getGeom } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nexport default function booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { featureCollection, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexport default lineSegment;\n","import { feature, featureCollection, point, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport lineSegment from \"@turf/line-segment\";\nimport { featureEach } from \"@turf/meta\";\nimport rbush from \"geojson-rbush\";\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return point([x, y]);\n    }\n    return null;\n}\nexport default lineIntersect;\n","import { featureCollection, lineString, multiLineString } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nexport default function (poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonToLine(geom, options);\n        case \"MultiPolygon\":\n            return multiPolygonToLine(geom, options);\n        default:\n            throw new Error(\"invalid poly\");\n    }\n}\n/**\n * @private\n */\nexport function polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(poly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : poly.type === \"Feature\"\n            ? poly.properties\n            : {};\n    return coordsToLine(coords, properties);\n}\n/**\n * @private\n */\nexport function multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(multiPoly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : multiPoly.type === \"Feature\"\n            ? multiPoly.properties\n            : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return featureCollection(lines);\n}\n/**\n * @private\n */\nexport function coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return multiLineString(coords, properties);\n    }\n    return lineString(coords[0], properties);\n}\n","import booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport lineIntersect from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport polygonToLine from \"@turf/polygon-to-line\";\n/**\n * Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set.\n *\n * @name booleanDisjoint\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanDisjoint(line, point);\n * //=true\n */\nfunction booleanDisjoint(feature1, feature2) {\n    var bool = true;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === false) {\n                return false;\n            }\n            bool = disjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n/**\n * Disjoint operation for simple Geometries (Point/LineString/Polygon)\n *\n * @private\n * @param {Geometry<any>} geom1 GeoJSON Geometry\n * @param {Geometry<any>} geom2 GeoJSON Geometry\n * @returns {boolean} true/false\n */\nfunction disjoint(geom1, geom2) {\n    switch (geom1.type) {\n        case \"Point\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !compareCoords(geom1.coordinates, geom2.coordinates);\n                case \"LineString\":\n                    return !isPointOnLine(geom2, geom1);\n                case \"Polygon\":\n                    return !booleanPointInPolygon(geom1, geom2);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"LineString\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !isPointOnLine(geom1, geom2);\n                case \"LineString\":\n                    return !isLineOnLine(geom1, geom2);\n                case \"Polygon\":\n                    return !isLineInPoly(geom2, geom1);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"Polygon\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !booleanPointInPolygon(geom2, geom1);\n                case \"LineString\":\n                    return !isLineInPoly(geom1, geom2);\n                case \"Polygon\":\n                    return !isPolyInPoly(geom2, geom1);\n            }\n    }\n    return false;\n}\n// http://stackoverflow.com/a/11908158/1979085\nfunction isPointOnLine(lineString, pt) {\n    for (var i = 0; i < lineString.coordinates.length - 1; i++) {\n        if (isPointOnLineSegment(lineString.coordinates[i], lineString.coordinates[i + 1], pt.coordinates)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n    var doLinesIntersect = lineIntersect(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isLineInPoly(polygon, lineString) {\n    for (var _i = 0, _a = lineString.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (booleanPointInPolygon(coord, polygon)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(lineString, polygonToLine(polygon));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * Is Polygon (geom1) in Polygon (geom2)\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    for (var _i = 0, _a = feature1.coordinates[0]; _i < _a.length; _i++) {\n        var coord1 = _a[_i];\n        if (booleanPointInPolygon(coord1, feature2)) {\n            return true;\n        }\n    }\n    for (var _b = 0, _c = feature2.coordinates[0]; _b < _c.length; _b++) {\n        var coord2 = _c[_b];\n        if (booleanPointInPolygon(coord2, feature1)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(polygonToLine(feature1), polygonToLine(feature2));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt) {\n    var dxc = pt[0] - lineSegmentStart[0];\n    var dyc = pt[1] - lineSegmentStart[1];\n    var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n    var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n        if (dxl > 0) {\n            return lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0];\n        }\n        else {\n            return lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n        }\n    }\n    else if (dyl > 0) {\n        return lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1];\n    }\n    else {\n        return lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n    }\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nexport default booleanDisjoint;\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","import { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nexport default function bearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    // Reverse calculation\n    if (options.final === true) {\n        return calculateFinalBearing(start, end);\n    }\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return radiansToDegrees(Math.atan2(a, b));\n}\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n","// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees, } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nexport default function destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearingRad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n    return point([lng, lat], options.properties);\n}\n","import bearing from \"@turf/bearing\";\nimport distance from \"@turf/distance\";\nimport destination from \"@turf/destination\";\nimport lineIntersects from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport { point, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    if (options === void 0) { options = {}; }\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity,\n    });\n    var length = 0.0;\n    flattenEach(lines, function (line) {\n        var coords = getCoords(line);\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = point(coords[i]);\n            start.properties.dist = distance(pt, start, options);\n            //stop\n            var stop_1 = point(coords[i + 1]);\n            stop_1.properties.dist = distance(pt, stop_1, options);\n            // sectionLength\n            var sectionLength = distance(start, stop_1, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop_1.properties.dist);\n            var direction = bearing(start, stop_1);\n            var perpendicularPt1 = destination(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination(pt, heightDistance, direction - 90, options);\n            var intersect = lineIntersects(lineString([\n                perpendicularPt1.geometry.coordinates,\n                perpendicularPt2.geometry.coordinates,\n            ]), lineString([start.geometry.coordinates, stop_1.geometry.coordinates]));\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance(pt, intersectPt, options);\n                intersectPt.properties.location =\n                    length + distance(start, intersectPt, options);\n            }\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop_1.properties.dist < closestPt.properties.dist) {\n                closestPt = stop_1;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt &&\n                intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n    });\n    return closestPt;\n}\nexport default nearestPointOnLine;\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexport default clone;\n","import clone from \"@turf/clone\";\nimport distance from \"@turf/distance\";\nimport { featureEach } from \"@turf/meta\";\n/**\n * Takes a reference {@link Point|point} and a FeatureCollection of Features\n * with Point geometries and returns the\n * point from the FeatureCollection closest to the reference. This calculation\n * is geodesic.\n *\n * @name nearestPoint\n * @param {Coord} targetPoint the reference point\n * @param {FeatureCollection<Point>} points against input point set\n * @returns {Feature<Point>} the closest point in the set to the reference point\n * @example\n * var targetPoint = turf.point([28.965797, 41.010086], {\"marker-color\": \"#0F0\"});\n * var points = turf.featureCollection([\n *     turf.point([28.973865, 41.011122]),\n *     turf.point([28.948459, 41.024204]),\n *     turf.point([28.938674, 41.013324])\n * ]);\n *\n * var nearest = turf.nearestPoint(targetPoint, points);\n *\n * //addToMap\n * var addToMap = [targetPoint, points, nearest];\n * nearest.properties['marker-color'] = '#F00';\n */\nfunction nearestPoint(targetPoint, points) {\n    // Input validation\n    if (!targetPoint)\n        throw new Error(\"targetPoint is required\");\n    if (!points)\n        throw new Error(\"points is required\");\n    var nearest;\n    var minDist = Infinity;\n    var bestFeatureIndex = 0;\n    featureEach(points, function (pt, featureIndex) {\n        var distanceToPoint = distance(targetPoint, pt);\n        if (distanceToPoint < minDist) {\n            bestFeatureIndex = featureIndex;\n            minDist = distanceToPoint;\n        }\n    });\n    nearest = clone(points.features[bestFeatureIndex]);\n    nearest.properties.featureIndex = bestFeatureIndex;\n    nearest.properties.distanceToPoint = minDist;\n    return nearest;\n}\nexport default nearestPoint;\n","import bearing from '@turf/bearing';\nimport destination from '@turf/destination';\nimport distance from '@turf/distance';\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var point1 = turf.point([144.834823, -37.771257]);\n * var point2 = turf.point([145.14244, -37.830937]);\n *\n * var midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1, point2) {\n  var dist = distance(point1, point2);\n  var heading = bearing(point1, point2);\n  var midpoint = destination(point1, dist / 2, heading);\n\n  return midpoint;\n}\n\nexport default midpoint;\n","// Heavily inspired from work of @davidgilbertson on Github and `leaflet-geoman` project.\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nconst { geojsonTypes } = MapboxDraw.constants;\n\nimport bboxPolygon from \"@turf/bbox-polygon\";\nimport booleanDisjoint from \"@turf/boolean-disjoint\";\nimport { getCoords } from \"@turf/invariant\";\nimport distance from \"@turf/distance\";\nimport polygonToLine from \"@turf/polygon-to-line\";\nimport nearestPointOnLine from \"@turf/nearest-point-on-line\";\nimport nearestPointInPointSet from \"@turf/nearest-point\";\nimport midpoint from \"@turf/midpoint\";\nimport {\n    featureCollection,\n    lineString as turfLineString,\n    point as turfPoint,\n} from \"@turf/helpers\";\n\nexport const IDS = {\n    VERTICAL_GUIDE: \"VERTICAL_GUIDE\",\n    HORIZONTAL_GUIDE: \"HORIZONTAL_GUIDE\",\n};\n\nexport const addPointTovertices = (\n    map,\n    vertices,\n    coordinates,\n    forceInclusion\n) => {\n    const { width: w, height: h } = map.getCanvas();\n    // Just add verteices of features currently visible in viewport\n    const { x, y } = map.project(coordinates);\n    const pointIsOnTheScreen = x > 0 && x < w && y > 0 && y < h;\n\n    // But do add off-screen points if forced (e.g. for the current feature)\n    // So features will always snap to their own points\n    if (pointIsOnTheScreen || forceInclusion) {\n        vertices.push(coordinates);\n    }\n};\n\nexport const createSnapList = (map, draw, currentFeature, featuresList) => {\n    // Get all drawn features\n    const features = featuresList;\n    const snapList = [];\n\n    // Get current bbox as polygon\n    const bboxAsPolygon = (() => {\n        const canvas = map.getCanvas(),\n            w = canvas.width,\n            h = canvas.height,\n            cUL = map.unproject([0, 0]).toArray(),\n            cUR = map.unproject([w, 0]).toArray(),\n            cLR = map.unproject([w, h]).toArray(),\n            cLL = map.unproject([0, h]).toArray();\n\n        return bboxPolygon([cLL, cUR].flat());\n    })();\n\n    const vertices = [];\n\n    // Keeps vertices for drwing guides\n    const addVerticesTovertices = (coordinates, isCurrentFeature = false) => {\n        if (!Array.isArray(coordinates)) throw Error(\"Your array is not an array\");\n\n        if (Array.isArray(coordinates[0])) {\n            // coordinates is an array of arrays, we must go deeper\n            coordinates.forEach((coord) => {\n                addVerticesTovertices(coord);\n            });\n        } else {\n            // If not an array of arrays, only consider arrays with two items\n            if (coordinates.length === 2) {\n                addPointTovertices(map, vertices, coordinates, isCurrentFeature);\n            }\n        }\n    };\n\n    features.forEach((feature) => {\n        // For currentfeature\n        if (feature.id === currentFeature.id) {\n            if (currentFeature.type === geojsonTypes.POLYGON) {\n                // For the current polygon, the last two points are the mouse position and back home\n                // so we chop those off (else we get vertices showing where the user clicked, even\n                // if they were just panning the map)\n                addVerticesTovertices(\n                    feature.geometry.coordinates[0].slice(0, -2),\n                    true\n                );\n            }\n            return;\n        }\n\n        // If this is re-running because a user is moving the map, the features might include\n        // vertices or the last leg of a polygon\n        if (\n            feature.id === IDS.HORIZONTAL_GUIDE ||\n            feature.id === IDS.VERTICAL_GUIDE\n        )\n            return;\n\n        addVerticesTovertices(feature.geometry.coordinates);\n\n        // If feature is currently on viewport add to snap list\n        if (!booleanDisjoint(bboxAsPolygon, feature)) {\n            snapList.push(feature);\n        }\n    });\n\n    return [snapList, vertices];\n};\n\nconst getNearbyvertices = (vertices, coords) => {\n    const verticals = [];\n    const horizontals = [];\n\n    vertices.forEach((vertex) => {\n        verticals.push(vertex[0]);\n        horizontals.push(vertex[1]);\n    });\n\n    const nearbyVerticalGuide = verticals.find(\n        (px) => Math.abs(px - coords.lng) < 0.009\n    );\n\n    const nearbyHorizontalGuide = horizontals.find(\n        (py) => Math.abs(py - coords.lat) < 0.009\n    );\n\n    return {\n        verticalPx: nearbyVerticalGuide,\n        horizontalPx: nearbyHorizontalGuide,\n    };\n};\n\nconst calcLayerDistances = (lngLat, layer) => {\n    // the point P which we want to snap (probpably the marker that is dragged)\n    const P = [lngLat.lng, lngLat.lat];\n\n    // is this a marker?\n    const isMarker = layer.geometry.type === \"Point\";\n    // is it a polygon?\n    const isPolygon = layer.geometry.type === \"Polygon\";\n    // is it a multiPolygon?\n    const isMultiPolygon = layer.geometry.type === \"MultiPolygon\";\n    // is it a multiPoint?\n    const isMultiPoint = layer.geometry.type === \"MultiPoint\";\n\n    let lines = undefined;\n\n    // the coords of the layer\n    const latlngs = getCoords(layer);\n\n    if (isMarker) {\n        const [lng, lat] = latlngs;\n        // return the info for the marker, no more calculations needed\n        return {\n            latlng: { lng, lat },\n            distance: distance(latlngs, P),\n        };\n    }\n\n    if (isMultiPoint) {\n        const np = nearestPointInPointSet(\n            P,\n            featureCollection(latlngs.map((x) => turfPoint(x)))\n        );\n        const c = np.geometry.coordinates;\n        return {\n            latlng: { lng: c[0], lat: c[1] },\n            distance: np.properties.distanceToPoint,\n        };\n    }\n\n    if (isPolygon || isMultiPolygon) {\n        lines = polygonToLine(layer);\n    } else {\n        lines = layer;\n    }\n\n    let nearestPoint;\n    if (isPolygon) {\n        let lineStrings;\n        if (lines.geometry.type === \"LineString\") {\n            lineStrings = [turfLineString(lines.geometry.coordinates)];\n        } else {\n            lineStrings = lines.geometry.coordinates.map((coords) =>\n                turfLineString(coords)\n            );\n        }\n\n        const closestFeature = getFeatureWithNearestPoint(lineStrings, P);\n        lines = closestFeature.feature;\n        nearestPoint = closestFeature.point;\n    } else if (isMultiPolygon) {\n        const lineStrings = lines.features\n            .map((feat) => {\n                if (feat.geometry.type === \"LineString\") {\n                    return [feat.geometry.coordinates];\n                } else {\n                    return feat.geometry.coordinates;\n                }\n            })\n            .flatMap((coords) => coords)\n            .map((coords) => turfLineString(coords));\n\n        const closestFeature = getFeatureWithNearestPoint(lineStrings, P);\n        lines = closestFeature.feature;\n        nearestPoint = closestFeature.point;\n    } else {\n        nearestPoint = nearestPointOnLine(lines, P);\n    }\n\n    const [lng, lat] = nearestPoint.geometry.coordinates;\n\n    let segmentIndex = nearestPoint.properties.index;\n    if (segmentIndex + 1 === lines.geometry.coordinates.length) segmentIndex--;\n\n    return {\n        latlng: { lng, lat },\n        segment: lines.geometry.coordinates.slice(segmentIndex, segmentIndex + 2),\n        distance: nearestPoint.properties.dist,\n        isMarker,\n    };\n};\n\nfunction getFeatureWithNearestPoint(lineStrings, P) {\n    const nearestPointsOfEachFeature = lineStrings.map((feat) => ({\n        feature: feat,\n        point: nearestPointOnLine(feat, P),\n    }));\n\n    nearestPointsOfEachFeature.sort(\n        (a, b) => a.point.properties.dist - b.point.properties.dist\n    );\n\n    return {\n        feature: nearestPointsOfEachFeature[0].feature,\n        point: nearestPointsOfEachFeature[0].point,\n    };\n}\n\nconst calcClosestLayer = (lngLat, layers) => {\n    let closestLayer = {};\n\n    // loop through the layers\n    layers.forEach((layer, index) => {\n        // find the closest latlng, segment and the distance of this layer to the dragged marker latlng\n        const results = calcLayerDistances(lngLat, layer);\n\n        // save the info if it doesn't exist or if the distance is smaller than the previous one\n        if (\n            closestLayer.distance === undefined ||\n            results.distance < closestLayer.distance\n        ) {\n            closestLayer = results;\n            closestLayer.layer = layer;\n        }\n    });\n\n    // return the closest layer and it's data\n    // if there is no closest layer, return undefined\n    return closestLayer;\n};\n\n// minimal distance before marker snaps (in pixels)\nconst metersPerPixel = function (latitude, zoomLevel) {\n    const earthCircumference = 40075017;\n    const latitudeRadians = latitude * (Math.PI / 180);\n    return (\n        (earthCircumference * Math.cos(latitudeRadians)) /\n        Math.pow(2, zoomLevel + 8)\n    );\n};\n\n// we got the point we want to snap to (C), but we need to check if a coord of the polygon\nfunction snapToLineOrPolygon(\n    closestLayer,\n    snapOptions,\n    snapVertexPriorityDistance\n) {\n    // A and B are the points of the closest segment to P (the marker position we want to snap)\n    const A = closestLayer.segment[0];\n    const B = closestLayer.segment[1];\n\n    // C is the point we would snap to on the segment.\n    // The closest point on the closest segment of the closest polygon to P. That's right.\n    const C = [closestLayer.latlng.lng, closestLayer.latlng.lat];\n\n    // distances from A to C and B to C to check which one is closer to C\n    const distanceAC = distance(A, C);\n    const distanceBC = distance(B, C);\n\n    // closest latlng of A and B to C\n    let closestVertexLatLng = distanceAC < distanceBC ? A : B;\n\n    // distance between closestVertexLatLng and C\n    let shortestDistance = distanceAC < distanceBC ? distanceAC : distanceBC;\n\n    // snap to middle (M) of segment if option is enabled\n    if (snapOptions && snapOptions.snapToMidPoints) {\n        const M = midpoint(A, B).geometry.coordinates;\n        const distanceMC = distance(M, C);\n\n        if (distanceMC < distanceAC && distanceMC < distanceBC) {\n            // M is the nearest vertex\n            closestVertexLatLng = M;\n            shortestDistance = distanceMC;\n        }\n    }\n\n    // the distance that needs to be undercut to trigger priority\n    const priorityDistance = snapVertexPriorityDistance;\n\n    // the latlng we ultemately want to snap to\n    let snapLatlng;\n\n    // if C is closer to the closestVertexLatLng (A, B or M) than the snapDistance,\n    // the closestVertexLatLng has priority over C as the snapping point.\n    if (shortestDistance < priorityDistance) {\n        snapLatlng = closestVertexLatLng;\n    } else {\n        snapLatlng = C;\n    }\n\n    // return the copy of snapping point\n    const [lng, lat] = snapLatlng;\n    return { lng, lat };\n}\n\nfunction snapToPoint(closestLayer) {\n    return closestLayer.latlng;\n}\n\nconst checkPrioritiySnapping = (\n    closestLayer,\n    snapOptions,\n    snapVertexPriorityDistance = 1.25\n) => {\n    let snappingToPoint = !Array.isArray(closestLayer.segment);\n    if (snappingToPoint) {\n        return snapToPoint(closestLayer);\n    } else {\n        return snapToLineOrPolygon(\n            closestLayer,\n            snapOptions,\n            snapVertexPriorityDistance\n        );\n    }\n};\n\n/**\n * Returns snap points if there are any, otherwise the original lng/lat of the event\n * Also, defines if vertices should show on the state object\n *\n * Mutates the state object\n *\n * @param state\n * @param e\n * @returns {{lng: number, lat: number}}\n */\nexport const snap = (state, e) => {\n    let lng = e.lngLat.lng;\n    let lat = e.lngLat.lat;\n\n    // Holding alt bypasses all snapping\n    if (e.originalEvent.altKey) {\n        state.showVerticalSnapLine = false;\n        state.showHorizontalSnapLine = false;\n\n        return { lng, lat };\n    }\n\n    if (state.snapList.length <= 0) {\n        return { lng, lat };\n    }\n\n    // snapping is on\n    let closestLayer, minDistance, snapLatLng;\n    if (state.options.snap) {\n        closestLayer = calcClosestLayer({ lng, lat }, state.snapList);\n\n        // if no layers found. Can happen when circle is the only visible layer on the map and the hidden snapping-border circle layer is also on the map\n        if (Object.keys(closestLayer).length === 0) {\n            return false;\n        }\n\n        const isMarker = closestLayer.isMarker;\n        // const snapVertexPriorityDistance = state.options.snapOptions\n        //     ? state.options.snapOptions.snapVertexPriorityDistance\n        //     : undefined;\n        const snapVertexPriorityDistance = state.snapVertexPriorityDistance;\n        if (!isMarker) {\n            snapLatLng = checkPrioritiySnapping(\n                closestLayer,\n                state.options.snapOptions,\n                snapVertexPriorityDistance\n            );\n            // snapLatLng = closestLayer.latlng;\n        } else {\n            snapLatLng = closestLayer.latlng;\n        }\n\n        minDistance =\n            ((state.options.snapOptions && state.options.snapOptions.snapPx) || 15) *\n            metersPerPixel(snapLatLng.lat, state.map.getZoom());\n    }\n\n    let verticalPx, horizontalPx;\n    if (state.options.guides) {\n        const nearestGuidline = getNearbyvertices(state.vertices, e.lngLat);\n\n        verticalPx = nearestGuidline.verticalPx;\n        horizontalPx = nearestGuidline.horizontalPx;\n\n        if (verticalPx) {\n            // Draw a line from top to bottom\n\n            const lngLatTop = { lng: verticalPx, lat: e.lngLat.lat + 10 };\n            const lngLatBottom = { lng: verticalPx, lat: e.lngLat.lat - 10 };\n\n            state.verticalGuide.updateCoordinate(0, lngLatTop.lng, lngLatTop.lat);\n            state.verticalGuide.updateCoordinate(\n                1,\n                lngLatBottom.lng,\n                lngLatBottom.lat\n            );\n        }\n\n        if (horizontalPx) {\n            // Draw a line from left to right\n\n            const lngLatTop = { lng: e.lngLat.lng + 10, lat: horizontalPx };\n            const lngLatBottom = { lng: e.lngLat.lng - 10, lat: horizontalPx };\n\n            state.horizontalGuide.updateCoordinate(0, lngLatTop.lng, lngLatTop.lat);\n            state.horizontalGuide.updateCoordinate(\n                1,\n                lngLatBottom.lng,\n                lngLatBottom.lat\n            );\n        }\n\n        state.showVerticalSnapLine = !!verticalPx;\n        state.showHorizontalSnapLine = !!horizontalPx;\n    }\n\n    if (closestLayer && closestLayer.distance * 1000 < minDistance) {\n        return snapLatLng;\n    } else if (verticalPx || horizontalPx) {\n        if (verticalPx) {\n            lng = verticalPx;\n        }\n        if (horizontalPx) {\n            lat = horizontalPx;\n        }\n        return { lng, lat };\n    } else {\n        return { lng, lat };\n    }\n    };\n\nexport const getGuideFeature = (id) => ({\n    id,\n    type: geojsonTypes.FEATURE,\n    properties: {\n        isSnapGuide: \"true\", // for styling\n    },\n    geometry: {\n        type: geojsonTypes.LINE_STRING,\n        coordinates: [],\n    },\n});\n\nexport const shouldHideGuide = (state, geojson) => {\n    if (\n        geojson.properties.id === IDS.VERTICAL_GUIDE &&\n        (!state.options.guides || !state.showVerticalSnapLine)\n    ) {\n        return true;\n    }\n\n    if (\n        geojson.properties.id === IDS.HORIZONTAL_GUIDE &&\n        (!state.options.guides || !state.showHorizontalSnapLine)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n","import { polygon } from \"@turf/helpers\";\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nexport default function bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport {\n  addPointTovertices,\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  shouldHideGuide,\n  snap,\n} from \"./../utils\";\n\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst DrawPoint = MapboxDraw.modes.draw_point;\nconst { geojsonTypes, cursors } = MapboxDraw.constants;\n\nconst SnapPointMode = { ...DrawPoint };\n\nSnapPointMode.onSetup = function (options) {\n  const point = this.newFeature({\n    type: geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: geojsonTypes.POINT,\n      coordinates: [[]],\n    },\n  });\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(point);\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const selectedFeatures = this.getSelected();\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n\n  const [snapList, vertices] = createSnapList(this.map, this._ctx.api, point);\n\n  const state = {\n    map: this.map,\n    point,\n    vertices,\n    snapList,\n    selectedFeatures,\n    verticalGuide,\n    horizontalGuide,\n  };\n\n  state.options = this._ctx.options;\n\n  const moveendCallback = () => {\n    const [snapList, vertices] = createSnapList(this.map, this._ctx.api, point);\n    state.vertices = vertices;\n    state.snapList = snapList;\n  };\n  // for removing listener later on close\n  state[\"moveendCallback\"] = moveendCallback;\n\n  const optionsChangedCallBAck = (options) => {\n    state.options = options;\n  };\n  // for removing listener later on close\n  state[\"optionsChangedCallBAck\"] = optionsChangedCallBAck;\n\n  this.map.on(\"moveend\", moveendCallback);\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallBAck);\n\n  return state;\n};\n\nSnapPointMode.onClick = function (state) {\n  // We mock out e with the rounded lng/lat then call DrawPoint with it\n  DrawPoint.onClick.call(this, state, {\n    lngLat: {\n      lng: state.snappedLng,\n      lat: state.snappedLat,\n    },\n  });\n};\n\nSnapPointMode.onMouseMove = function (state, e) {\n  const { lng, lat } = snap(state, e);\n\n  state.snappedLng = lng;\n  state.snappedLat = lat;\n\n  if (\n    state.lastVertex &&\n    state.lastVertex[0] === lng &&\n    state.lastVertex[1] === lat\n  ) {\n    this.updateUIClasses({ mouse: cursors.POINTER });\n\n    // cursor options:\n    // ADD: \"add\"\n    // DRAG: \"drag\"\n    // MOVE: \"move\"\n    // NONE: \"none\"\n    // POINTER: \"pointer\"\n  } else {\n    this.updateUIClasses({ mouse: cursors.ADD });\n  }\n};\n\n// This is 'extending' DrawPoint.toDisplayFeatures\nSnapPointMode.toDisplayFeatures = function (state, geojson, display) {\n  if (shouldHideGuide(state, geojson)) return;\n\n  // This relies on the the state of SnapPointMode having a 'point' prop\n  DrawPoint.toDisplayFeatures(state, geojson, display);\n};\n\n// This is 'extending' DrawPoint.onStop\nSnapPointMode.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveemd callback\n  this.map.off(\"moveend\", state.moveendCallback);\n\n  // This relies on the the state of SnapPointMode having a 'point' prop\n  DrawPoint.onStop.call(this, state);\n};\n\nexport default SnapPointMode;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nconst {\n  geojsonTypes,\n  modes,\n  cursors,\n} = MapboxDraw.constants;\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst DrawLine = MapboxDraw.modes.draw_line_string;\n\nimport {\n  addPointTovertices,\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  shouldHideGuide,\n  snap,\n} from \"./../utils\";\n\nconst SnapLineMode = { ...DrawLine };\n\nSnapLineMode.onSetup = function (options) {\n    const line = this.newFeature({\n    type: geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: geojsonTypes.LINE_STRING,\n      coordinates: [[]],\n    },\n  });\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n    const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n  \n  this.addFeature(line);\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const selectedFeatures = this.getSelected();\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n\n  const [snapList, vertices] = createSnapList(this.map, this._ctx.api, line);\n\n  const state = {\n    map: this.map,\n    line,\n    currentVertexPosition: 0,\n    vertices,\n    snapList,\n    selectedFeatures,\n    verticalGuide,\n    horizontalGuide,\n    direction: \"forward\", // expected by DrawLineString\n      };\n\n  state.options = this._ctx.options;\n\n  const moveendCallback = () => {\n        const [snapList, vertices] = createSnapList(this.map, this._ctx.api, line);\n    state.vertices = vertices;\n    state.snapList = snapList;\n  };\n  // for removing listener later on close\n  state[\"moveendCallback\"] = moveendCallback;\n\n  const optionsChangedCallBAck = (options) => {\n    state.options = options;\n  };\n  // for removing listener later on close\n  state[\"optionsChangedCallBAck\"] = optionsChangedCallBAck;\n\n  this.map.on(\"moveend\", moveendCallback);\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallBAck);\n\n  return state;\n};\n\nSnapLineMode.onClick = function (state) {\n  // We save some processing by rounding on click, not mousemove\n  const lng = state.snappedLng;\n  const lat = state.snappedLat;\n\n  // End the drawing if this click is on the previous position\n  // Note: not bothering with 'direction'\n  if (state.currentVertexPosition > 0) {\n    const lastVertex = state.line.coordinates[state.currentVertexPosition - 1];\n\n    state.lastVertex = lastVertex;\n\n    if (lastVertex[0] === lng && lastVertex[1] === lat) {\n      return this.changeMode(modes.SIMPLE_SELECT, {\n        featureIds: [state.line.id],\n      });\n    }\n  }\n\n  // const point = state.map.project({ lng: lng, lat: lat });\n\n  addPointTovertices(state.map, state.vertices, { lng, lat });\n\n  state.line.updateCoordinate(state.currentVertexPosition, lng, lat);\n\n  state.currentVertexPosition++;\n\n  state.line.updateCoordinate(state.currentVertexPosition, lng, lat);\n};\n\nSnapLineMode.onMouseMove = function (state, e) {\n    const { lng, lat } = snap(state, e);\n\n  state.line.updateCoordinate(state.currentVertexPosition, lng, lat);\n  state.snappedLng = lng;\n  state.snappedLat = lat;\n\n  if (\n    state.lastVertex &&\n    state.lastVertex[0] === lng &&\n    state.lastVertex[1] === lat\n  ) {\n    this.updateUIClasses({ mouse: cursors.POINTER });\n\n    // cursor options:\n    // ADD: \"add\"\n    // DRAG: \"drag\"\n    // MOVE: \"move\"\n    // NONE: \"none\"\n    // POINTER: \"pointer\"\n  } else {\n    this.updateUIClasses({ mouse: cursors.ADD });\n  }\n};\n\n// This is 'extending' DrawLine.toDisplayFeatures\nSnapLineMode.toDisplayFeatures = function (state, geojson, display) {\n  if (shouldHideGuide(state, geojson)) return;\n\n  // This relies on the the state of SnapLineMode being similar to DrawLine\n  DrawLine.toDisplayFeatures(state, geojson, display);\n};\n\n// This is 'extending' DrawLine.onStop\nSnapLineMode.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveemd callback\n  this.map.off(\"moveend\", state.moveendCallback);\n\n  // This relies on the the state of SnapLineMode being similar to DrawLine\n  DrawLine.onStop.call(this, state);\n};\n\nexport default SnapLineMode;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nconst { geojsonTypes, modes, cursors } = MapboxDraw.constants;\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst DrawPolygon = MapboxDraw.modes.draw_polygon;\n\nimport {\n  addPointTovertices,\n  createSnapList,\n  getGuideFeature,\n  IDS,\n  shouldHideGuide,\n  snap,\n} from \"./../utils\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\n\nconst SnapPolygonMode = { ...DrawPolygon };\n\nSnapPolygonMode.onSetup = function (options) {\n  const polygon = this.newFeature({\n    type: geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: geojsonTypes.POLYGON,\n      coordinates: [[]],\n    },\n  });\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(polygon);\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const selectedFeatures = this.getSelected();\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n\n  const [snapList, vertices] = createSnapList(this.map, this._ctx.api, polygon);\n\n  const state = {\n    map: this.map,\n    polygon,\n    currentVertexPosition: 0,\n    vertices,\n    snapList,\n    selectedFeatures,\n    verticalGuide,\n    horizontalGuide,\n  };\n\n  /// Adding default options\n  state.options = Object.assign(this._ctx.options, {\n    overlap: true,\n  });\n\n  const moveendCallback = () => {\n    const [snapList, vertices] = createSnapList(\n      this.map,\n      this._ctx.api,\n      polygon\n    );\n    state.vertices = vertices;\n    state.snapList = snapList;\n  };\n  // for removing listener later on close\n  state[\"moveendCallback\"] = moveendCallback;\n\n  const optionsChangedCallBAck = (options) => {\n    state.options = options;\n  };\n\n  // for removing listener later on close\n  state[\"optionsChangedCallBAck\"] = optionsChangedCallBAck;\n\n  this.map.on(\"moveend\", moveendCallback);\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallBAck);\n\n  return state;\n};\n\nSnapPolygonMode.onClick = function (state) {\n  // We save some processing by rounding on click, not mousemove\n  const lng = state.snappedLng;\n  const lat = state.snappedLat;\n\n  // End the drawing if this click is on the previous position\n  if (state.currentVertexPosition > 0) {\n    const lastVertex =\n      state.polygon.coordinates[0][state.currentVertexPosition - 1];\n\n    state.lastVertex = lastVertex;\n\n    if (lastVertex[0] === lng && lastVertex[1] === lat) {\n      return this.changeMode(modes.SIMPLE_SELECT, {\n        featureIds: [state.polygon.id],\n      });\n    }\n  }\n\n  // const point = state.map.project();\n\n  addPointTovertices(state.map, state.vertices, { lng, lat });\n\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, lng, lat);\n\n  state.currentVertexPosition++;\n\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, lng, lat);\n};\n\nSnapPolygonMode.onMouseMove = function (state, e) {\n  const { lng, lat } = snap(state, e);\n\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, lng, lat);\n  state.snappedLng = lng;\n  state.snappedLat = lat;\n\n  if (\n    state.lastVertex &&\n    state.lastVertex[0] === lng &&\n    state.lastVertex[1] === lat\n  ) {\n    this.updateUIClasses({ mouse: cursors.POINTER });\n\n    // cursor options:\n    // ADD: \"add\"\n    // DRAG: \"drag\"\n    // MOVE: \"move\"\n    // NONE: \"none\"\n    // POINTER: \"pointer\"\n  } else {\n    this.updateUIClasses({ mouse: cursors.ADD });\n  }\n};\n\n// This is 'extending' DrawPolygon.toDisplayFeatures\nSnapPolygonMode.toDisplayFeatures = function (state, geojson, display) {\n  if (shouldHideGuide(state, geojson)) return;\n\n  // This relies on the the state of SnapPolygonMode being similar to DrawPolygon\n  DrawPolygon.toDisplayFeatures(state, geojson, display);\n};\n\n// This is 'extending' DrawPolygon.onStop\nSnapPolygonMode.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveemd callback\n  this.map.off(\"moveend\", state.moveendCallback);\n  this.map.off(\"draw.snap.options_changed\", state.optionsChangedCallBAck);\n\n  var userPolygon = state.polygon;\n  if (state.options.overlap) {\n    DrawPolygon.onStop.call(this, state);\n    return;\n  }\n  // if overlap is false, mutate polygon so it doesnt overlap with existing ones\n  // get all editable features to check for intersections\n  var features = this._ctx.store.getAll();\n\n  try {\n    var edited = userPolygon;\n    features.forEach(function (feature) {\n      if (userPolygon.id === feature.id) return false;\n      if (!booleanIntersects(feature, edited)) return;\n      edited = turf.difference(edited, feature);\n    });\n    state.polygon.coordinates =\n      edited.coordinates || edited.geometry.coordinates;\n  } catch (err) {\n    // cancel this polygon if a difference cannot be calculated\n    DrawPolygon.onStop.call(this, state);\n    this.deleteFeature([state.polygon.id], { silent: true });\n    return;\n  }\n\n  // monkeypatch so DrawPolygon.onStop doesn't error\n  var rc = state.polygon.removeCoordinate;\n  state.polygon.removeCoordinate = () => {};\n  // This relies on the the state of SnapPolygonMode being similar to DrawPolygon\n  DrawPolygon.onStop.call(this, state);\n  state.polygon.removeCoordinate = rc.bind(state.polygon);\n};\n\nexport default SnapPolygonMode;\n","import booleanDisjoint from \"@turf/boolean-disjoint\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Boolean-intersects returns (TRUE) two geometries intersect.\n *\n * @name booleanIntersects\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanIntersects(line, point);\n * //=true\n */\nexport default function booleanIntersects(feature1, feature2) {\n    var bool = false;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === true) {\n                return true;\n            }\n            bool = !booleanDisjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport { createSnapList, getGuideFeature, IDS, snap } from \"./../utils\";\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst DirectSelect = MapboxDraw.modes.direct_select;\nconst Constants = MapboxDraw.constants;\nconst SnapDirectSelect = { ...DirectSelect };\n\nSnapDirectSelect.onSetup = function (opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error(\"You must provide a featureId to enter direct_select mode\");\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError(\"direct_select mode doesn't handle point features\");\n  }\n\n  const [snapList, vertices] = createSnapList(this.map, this._ctx.api, feature);\n\n  const verticalGuide = this.newFeature(getGuideFeature(IDS.VERTICAL_GUIDE));\n  const horizontalGuide = this.newFeature(\n    getGuideFeature(IDS.HORIZONTAL_GUIDE)\n  );\n\n  this.addFeature(verticalGuide);\n  this.addFeature(horizontalGuide);\n\n  const state = {\n    map: this.map,\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\n    vertices,\n    snapList,\n    verticalGuide,\n    horizontalGuide,\n  };\n\n  state.options = this._ctx.options;\n\n  this.setSelectedCoordinates(\n    this.pathsToCoordinates(featureId, state.selectedCoordPaths)\n  );\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true,\n  });\n\n  const optionsChangedCallBAck = (options) => {\n    state.options = options;\n  };\n\n  // for removing listener later on close\n  state[\"optionsChangedCallBAck\"] = optionsChangedCallBAck;\n  this.map.on(\"draw.snap.options_changed\", optionsChangedCallBAck);\n\n  return state;\n};\n\nSnapDirectSelect.dragVertex = function (state, e, delta) {\n  const { lng, lat } = snap(state, e);\n\n  state.feature.updateCoordinate(state.selectedCoordPaths[0], lng, lat);\n};\n\nSnapDirectSelect.onStop = function (state) {\n  this.deleteFeature(IDS.VERTICAL_GUIDE, { silent: true });\n  this.deleteFeature(IDS.HORIZONTAL_GUIDE, { silent: true });\n\n  // remove moveemd callback\n  //   this.map.off(\"moveend\", state.moveendCallback);\n  this.map.off(\"draw.snap.options_changed\", state.optionsChangedCallBAck);\n\n  // This relies on the the state of SnapPolygonMode being similar to DrawPolygon\n  DirectSelect.onStop.call(this, state);\n};\n\nexport default SnapDirectSelect;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nconst theme = MapboxDraw.lib.theme;\n\nconst modifiedDefaultStyles = theme.map(defaultStyle => {\n  if (defaultStyle.id === 'gl-draw-line-inactive') {\n    return {\n      ...defaultStyle,\n      filter: [\n        ...defaultStyle.filter,\n        ['!=', 'user_isSnapGuide', 'true'],\n      ],\n    };\n  }\n\n  return defaultStyle;\n});\n\nconst customDrawStyles = [\n  ...modifiedDefaultStyles,\n  {\n    id: \"guide\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"LineString\"],\n      [\"==\", \"user_isSnapGuide\", \"true\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#c00c00\",\n      \"line-width\": 1,\n      \"line-dasharray\": [5, 5],\n    },\n  },\n];\n\nexport default customDrawStyles;\n"],"names":["root","factory","exports","module","define","amd","this","t","e","n","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","o","on","Error","push","selector","fn","render","store","featureChanged","r","i","a","length","s","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","__esModule","Object","prototype","hasOwnProperty","default","apply","arguments","Function","bind","defineProperty","value","keys","forEach","getOwnPropertyDescriptor","get","enumerable","RADIUS","FLATTENING","POLAR_RADIUS","Math","abs","c","l","u","sin","PI","geometry","type","coordinates","geometries","ring","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","HOT","COLD","d","ADD","MOVE","DRAG","POINTER","NONE","p","POLYGON","LINE","POINT","f","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","h","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","STATIC","g","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","y","CHANGE_COORDINATES","v","MIDPOINT","VERTEX","m","ACTIVE","INACTIVE","_","b","E","freeze","__proto__","classes","sources","cursors","types","geojsonTypes","modes","events","updateActions","meta","activeStates","interactions","LAT_MIN","LAT_RENDERED_MIN","LAT_MAX","LAT_RENDERED_MAX","LNG_MIN","LNG_MAX","T","Point","LineString","MultiLineString","Polygon","C","area","O","map","property","sort","S","point","x","I","_items","_nums","_length","add","has","delete","values","k","JSON","parse","clear","M","L","options","clickBuffer","touch","touchBuffer","styles","layers","id","queryRenderedFeatures","filter","indexOf","properties","N","mouse","active","feature","currentModeName","queueMapClasses","A","sqrt","P","fineTolerance","grossTolerance","interval","time","F","tolerance","w","R","log","pow","floor","random","toString","parseInt","rack","hats","set","bits","base","D","ctx","changed","incomingCoords","setCoordinates","getCoordinates","stringify","setProperty","toGeoJSON","internal","mode","userProperties","U","create","isValid","updateCoordinate","getCoordinate","j","addCoordinate","splice","removeCoordinate","V","slice","every","split","concat","B","MultiPoint","MultiPolygon","G","join","J","model","TypeError","features","_coordinatesToFeatures","z","drawConfig","_ctx","replace","getFeatures","setSelected","setSelectedCoordinates","reduce","feature_id","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actionable","changeMode","updateUIClasses","activateUIButton","setActiveButton","featuresAt","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","Y","$","q","onCombineFeatures","onUncombineFeatures","H","X","getSource","isDirty","getAllIds","getChangedIds","hot","cold","parent","currentModeRender","setData","_emitSelectionChange","fire","points","getSelectedCoordinates","_deletedFeaturesToEmit","clearChangedIds","Z","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_mapInitialConfig","requestAnimationFrame","W","silent","createRenderBatch","setDirty","getAll","coord_path","setFeatureProperty","storeMapConfig","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","K","Q","tt","et","nt","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","Date","getTime","originalEvent","stopPropagation","mousedrag","touchdrag","buttons","which","featureTarget","preventDefault","touchEnabled","srcElement","target","classList","contains","keyCode","controls","line_string","polygon","zoomend","changeZoom","data","dataType","setup","some","getLayer","defaultMode","actions","addEventListener","keybindings","removeEventListener","getMode","remove","document","createElement","className","setAttribute","title","appendChild","onDeactivate","onActivate","addButtons","combine_features","uncombine_features","getContainer","boxSelect","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","ot","paint","layout","rt","it","shiftKey","button","at","st","ut","ct","lt","dt","pt","ft","ht","isOfMetaType","isShiftMousedown","isActiveFeature","isInactiveFeature","noTarget","isFeature","isVertex","isShiftDown","isEscapeKey","isEnterKey","isTrue","gt","yt","clone","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","dist","distSqr","angle","atan2","angleTo","angleWith","angleWithSep","cos","convert","Array","isArray","vt","mt","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","_t","bt","lng","lat","Et","String","midpoints","selectedPaths","Tt","setTimeout","doubleClickZoom","Ct","Ot","St","GeometryCollection","Feature","FeatureCollection","It","xt","Mt","Lt","Nt","At","Pt","Ft","wt","Rt","node","node_","path","parents","key","isRoot","level","circular","update","Ut","before","after","pre","post","block","Dt","isLeaf","notLeaf","notRoot","jt","Vt","isLast","isFirst","pop","kt","RegExp","message","Boolean","Number","getPrototypeOf","constructor","paths","nodes","Bt","Gt","Jt","_bbox","_valid","include","min","max","bbox","center","union","_fastContains","intersect","zt","Yt","$t","qt","Ht","Xt","bboxify","Zt","Wt","Kt","ceil","Qt","te","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initiallySelectedFeatureIds","featureIds","fireActionable","fireUpdate","action","getUniqueIds","stopExtendedInteractions","clickAnywhere","clickOnVertex","clickOnFeature","featureId","coordPath","startPos","lngLat","startOnActiveFeature","startBoxSelect","dragMove","whileBoxSelect","style","transform","WebkitTransform","width","height","includes","createdFeatures","deletedFeatures","ee","ne","oe","selectedCoordPaths","startDragging","stopDragging","onVertex","pathsToCoordinates","onMidpoint","onFeature","dragFeature","dragVertex","clickNoTarget","clickInactive","clickActiveFeature","localeCompare","numeric","re","ie","stopDrawingAndRemove","ae","currentVertexPosition","se","from","line","direction","ue","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","ce","displayControlsDefault","le","de","pe","source","fe","self","nodeType","process","binding","isTypedArray","size","exec","IE_PROTO","Buffer","Symbol","Uint8Array","propertyIsEnumerable","toStringTag","getOwnPropertySymbols","isBuffer","valueOf","__data__","byteLength","byteOffset","buffer","name","test","hash","string","ArrayBuffer","resolve","he","ge","ye","ve","CommonSelectors","constrainFeatureMovement","createMidPoint","createSupplementaryPoints","createVertex","euclideanDistance","getFeatureAtAndSetCursors","isClick","isEventAtCoordinates","isTap","mapEventToBoundingBox","ModeHandler","moveFeatures","sortFeatures","stringSetsAreEqual","StringSet","theme","toDenseArray","me","getFeatureIdsAt","getSelectedPoints","deleteAll","api","_e","constants","lib","meta_1","geojson","result","Infinity","coordEach","coord","geom","feat","isNumber","_i","coordinates_1","lineString","featureCollection","fc","multiLineString","multiPoint","multiPolygon","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","radiansToDegrees","num","isNaN","earthRadius","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","areaFactors","acres","hectares","_options","coords","polygons","lineStrings","geometryCollection","precision","multiplier","lengthToDegrees","bearingToAzimuth","bearing","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","startFactor","finalFactor","isObject","input","validateBBox","validateId","helpers","callback","excludeWrapCoord","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","propEach","featureEach","geomEach","featureProperties","featureBBox","undefined","flattenEach","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","lineEach","coordAll","coordReduce","initialValue","previousValue","featureReduce","currentFeature","findPoint","findSegment","flattenReduce","geomReduce","currentGeometry","lineReduce","currentLine","propReduce","currentProperties","segmentReduce","started","rbush","turfBBox","geojsonRbush","maxEntries","tree","insert","load","search","toBBox","collides","all","toJSON","fromJSON","json","minX","minY","maxX","maxY","exp","_maxEntries","_minEntries","children","leaf","_all","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","_allDistMargin","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","globalThis","window","obj","prop","getCoord","getCoords","getGeom","booleanPointInPolygon","polys","inBBox","insidePoly","inRing","ignoreBoundary","inHole","isInside","xi","yi","xj","yj","coordinate","results","segments","currentCoords","coords1","coords2","x1","y1","x2","y2","segment","createSegments","lineSegmentFeature","intersects","line1","line2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","unique","match","poly","coordsToLine","polygonToLine","multiPoly","lines","multiPolygonToLine","isPointOnLine","isPointOnLineSegment","isLineInPoly","_a","lineSegmentStart","lineSegmentEnd","dxc","dyc","dxl","dyl","feature1","feature2","bool","flatten1","flatten2","geom1","geom2","pair1","pair2","lineString1","lineString2","isLineOnLine","_b","_c","isPolyInPoly","disjoint","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","end","final","bear","calculateFinalBearing","lon1","lon2","destination","origin","longitude1","latitude1","bearingRad","latitude2","asin","closestPt","stop_1","sectionLength","heightDistance","perpendicularPt1","perpendicularPt2","intersectPt","location","index","cloneFeature","cloned","cloneProperties","cloneGeometry","item","deepSlice","cloneFeatureCollection","targetPoint","nearest","minDist","bestFeatureIndex","distanceToPoint","point1","point2","MapboxDraw","IDS","VERTICAL_GUIDE","HORIZONTAL_GUIDE","addPointTovertices","vertices","forceInclusion","getCanvas","project","createSnapList","draw","featuresList","snapList","bboxAsPolygon","canvas","cUR","unproject","toArray","west","south","east","north","lowLeft","bboxPolygon","flat","addVerticesTovertices","isCurrentFeature","booleanDisjoint","getFeatureWithNearestPoint","nearestPointsOfEachFeature","nearestPointOnLine","calcClosestLayer","closestLayer","layer","nearestPoint","isMarker","isPolygon","isMultiPolygon","isMultiPoint","latlngs","latlng","np","nearestPointInPointSet","turfPoint","closestFeature","turfLineString","flatMap","calcLayerDistances","snapToLineOrPolygon","snapOptions","snapVertexPriorityDistance","distanceAC","distanceBC","closestVertexLatLng","shortestDistance","snapToMidPoints","midpoint","distanceMC","snapToPoint","snap","state","minDistance","snapLatLng","latitude","zoomLevel","latitudeRadians","verticalPx","horizontalPx","verticals","horizontals","altKey","showVerticalSnapLine","showHorizontalSnapLine","checkPrioritiySnapping","snapPx","getZoom","guides","nearestGuidline","vertex","find","px","py","lngLatTop","lngLatBottom","verticalGuide","horizontalGuide","getGuideFeature","isSnapGuide","shouldHideGuide","DrawPoint","SnapPointMode","selectedFeatures","moveendCallback","optionsChangedCallBAck","snappedLng","snappedLat","lastVertex","display","DrawLine","SnapLineMode","DrawPolygon","SnapPolygonMode","assign","overlap","userPolygon","edited","turf","difference","err","rc","DirectSelect","Constants","SnapDirectSelect","opts","delta","modifiedDefaultStyles","defaultStyle"],"sourceRoot":""}